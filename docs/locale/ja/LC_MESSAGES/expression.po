msgid ""
msgstr ""
"Project-Id-Version: doma-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-17 05:50+0000\n"
"PO-Revision-Date: 2024-03-17 05:55\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: doma-docs\n"
"X-Crowdin-Project-ID: 657384\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /_build/gettext/expression.pot\n"
"X-Crowdin-File-ID: 178\n"
"Language: ja_JP\n"

#: ../../expression.rst:3
#: 494c1256475d4efba5dd31f07bfd93f3
msgid "Expression language"
msgstr "式言語"

#: ../../expression.rst:6
#: 53b2af73360042939b7a0101fd59ea5a
msgid "Contents"
msgstr "コンテンツ"

#: ../../expression.rst:8
#: e4cf19c2778941649640912f22733bdf
msgid "You can write simple expressions in directives of :doc:`sql`. The grammar is almost the same as Java. However, not everything is possible that Java can do."
msgstr ":doc:`sql` のディレクティブ内に簡単な式を記述できます。文法はJavaとほぼ同じです。ただし、Java でできることの全てができるわけではありません。"

#: ../../expression.rst:14
#: 0fa977df8697419087815219e608e4a5
msgid "Especially, the big difference is how to use optional types like ``java.util.Optional``. In the expression, a value of ``Optional`` type is always converted to a value of the element type automatically. For example a value of the ``Optional<String>`` type is treated as a value of ``String`` type. Therefore, we can't call methods of ``Optional`` type, nor do we call methods which have an ``Optional`` type in the parameters."
msgstr "特に大きな違いは、``java.util.Optional`` のようなオプション型の使い方です。式の中では、``Optional`` 型の値は常に要素型の値に自動的に変換されます。たとえば、``Optional<String>`` 型の値は、``String`` 型の値として扱われます。したがって、 ``Optional`` 型のメソッドを呼び出すことはできません。また、パラメータに ``Optional`` 型を持つメソッドを呼び出すこともできません。"

#: ../../expression.rst:21
#: 9d67b020f9654cbeb208ce65513b5466
msgid "When you want to check existence of a value, use ``/*%if optional != null */`` instead of ``/*%if optional.isPresent() */``."
msgstr "値の存在を確認したい場合は、``/*%if optional.isPresent() */`` ではなく ``/*%if optional != null */`` を使用します。"

#: ../../expression.rst:24
#: 7384c932c77c471eb5931d4adfaa61f6
msgid "The same is true for ``java.util.OptionalInt``, ``java.util.OptionalDouble``, and ``java.util.OptionalLong``."
msgstr "``java.util.OptionalInt``、``java.util.OptionalDouble``、および ``java.util.OptionalLong`` についても同様です。"

#: ../../expression.rst:28
#: 1f410e2111884e0dbb3584ba15e5209e
msgid "Literals"
msgstr "リテラル"

#: ../../expression.rst:30
#: 59ea52e66b9b451ca49ebf2cf43e425c
msgid "You can use the following literals:"
msgstr "次のリテラルを使用できます。"

#: ../../expression.rst:33
#: f2366453a56442fa93a54bfc4995ffca
msgid "Literal"
msgstr "リテラル"

#: ../../expression.rst:33
#: 39e68519828e4fb48edf555ea82e25f4
msgid "Type"
msgstr "型"

#: ../../expression.rst:35
#: 99e1f81f4009406db962dbaf92669306
msgid "null"
msgstr ""

#: ../../expression.rst:35
#: 66e01692faf7458c98643108d4351f5d
msgid "void"
msgstr ""

#: ../../expression.rst:37
#: c573e992f96845ecb43f5d0dae340a7c
msgid "true"
msgstr ""

#: ../../expression.rst:37
#: ../../expression.rst:39
#: 8f1e3dee39984ba89b4e510af8d0c8e2
#: 3717f3b6bdc64a349f5aa5014440c3d4
msgid "boolean"
msgstr ""

#: ../../expression.rst:39
#: 8044db262704400fbaf55df3062fd1d8
msgid "false"
msgstr ""

#: ../../expression.rst:41
#: 54249b60f98a4e4cb1f41621e1fccc1e
msgid "10"
msgstr ""

#: ../../expression.rst:41
#: bd8af83a1e544c0587c932ad083106f5
msgid "int"
msgstr ""

#: ../../expression.rst:43
#: ac711bc56e8940b4b4a20b1d8ae4c5df
msgid "10L"
msgstr ""

#: ../../expression.rst:43
#: 846bde9354b544788b15c0c80e902ab4
msgid "long"
msgstr ""

#: ../../expression.rst:45
#: a898f7fabfe2461996b6097d939e4222
msgid "0.123F"
msgstr ""

#: ../../expression.rst:45
#: 5f0838f431324e5895113ff4441bcc2f
msgid "float"
msgstr ""

#: ../../expression.rst:47
#: 920ac19d3f504d99b5bae5c11c682551
msgid "0.123D"
msgstr ""

#: ../../expression.rst:47
#: 05185dd975794b59a55da3312604d8bf
msgid "double"
msgstr ""

#: ../../expression.rst:49
#: 61d03ab845654d4e9b3ae0803e95a763
msgid "0.123B"
msgstr ""

#: ../../expression.rst:49
#: f9bf720a33f84bcaa5783075dcb9753e
msgid "java.math.BigDecimal"
msgstr ""

#: ../../expression.rst:51
#: 61588060915b42b095cb2c55b959f32c
msgid "'a'"
msgstr ""

#: ../../expression.rst:51
#: ../../expression.rst:155
#: e3f3e9b5ce5b451592f1f6c0bd5e55d5
#: 1cd943e5efbf4beb932f783f94efb0ed
msgid "char"
msgstr ""

#: ../../expression.rst:53
#: 05e0deea960d4093a9f00ae3e679d35e
msgid "\"a\""
msgstr ""

#: ../../expression.rst:53
#: ../../expression.rst:153
#: 5198906417204590a1e2927f58f835d4
#: e3b6a93f808f450889fb38ee1a8e17c4
msgid "java.lang.String"
msgstr ""

#: ../../expression.rst:56
#: 31a9ba5a9b7549aab11308d9b4b7bb9a
msgid "The numeral types are distinguished by suffix letters such as ``L`` or ``F`` at the end of the literals. The suffixes must be capital letters."
msgstr "数値の種類は、リテラルの末尾にある ``L`` や ``F`` などの接尾辞によって区別されます。接尾辞は大文字である必要があります。"

#: ../../expression.rst:67
#: 80c4bbb69e1544709e1ec027cf45a9e2
msgid "Comparison operators"
msgstr "比較演算子"

#: ../../expression.rst:69
#: 3343babcb16e4fe0aea11701ed51ca7a
msgid "You can use the following comparison operators:"
msgstr "次の比較演算子を使用できます。"

#: ../../expression.rst:72
#: ../../expression.rst:104
#: ../../expression.rst:126
#: fefd36802b0347e09634367d4fa46e2b
#: 62f70357ee0743d19c50dca25c3dccd2
#: c1d673ee1e19430cb89917f50b1f5fd0
msgid "Operator"
msgstr "演算子"

#: ../../expression.rst:72
#: ../../expression.rst:104
#: ../../expression.rst:126
#: 7e535636bf034f55a5a7e20047da3690
#: 6015d9d98a4c468fafcf50581680e30a
#: e3e58a26bf5e4a29b05d5f490002bac0
msgid "Description"
msgstr "説明"

#: ../../expression.rst:74
#: 24ea33ab1d8c49d4a11d90ab7938b898
msgid "=="
msgstr ""

#: ../../expression.rst:74
#: 9db91bfb39474f02a9a56a133bc00e0e
msgid "Equal to operator"
msgstr "等値演算子"

#: ../../expression.rst:76
#: cdc85cd901d347d59e85340128118bdb
msgid "!="
msgstr ""

#: ../../expression.rst:76
#: 39a257b975994220ad1bd6fcecf3d8ca
msgid "Not equal to operator"
msgstr "不等値演算子"

#: ../../expression.rst:78
#: 85ab58dfdf554acdb0c9cd2323a14f06
msgid "<"
msgstr ""

#: ../../expression.rst:78
#: d811c88c64f848a0ad6d053e3c1a078c
msgid "Less than operator"
msgstr "小なり演算子"

#: ../../expression.rst:80
#: e1070afea4d541869a7778b3ad1828b4
msgid "<="
msgstr ""

#: ../../expression.rst:80
#: 8764831acb60460abceeff9286713b69
msgid "Less than or equal to operator"
msgstr "小なりイコール演算子"

#: ../../expression.rst:82
#: 40061ae517164defb8842803ac45fed3
msgid ">"
msgstr ""

#: ../../expression.rst:82
#: f8a2b10bd3084372afc4b8ee7f5858d6
msgid "Greater than operator"
msgstr "大なり演算子"

#: ../../expression.rst:84
#: e025c1ad0bed43b48c047feabc17743c
msgid ">="
msgstr ""

#: ../../expression.rst:84
#: ab2492a4f41b4895bf2f3aa7516d9797
msgid "Greater than or equal to operator"
msgstr "大なりイコール演算子"

#: ../../expression.rst:87
#: 1643267ebc8047a2a7f6e5d6857d3d9f
msgid "To use comparison operators, operands must implement ``java.lang.Comparable``."
msgstr "比較演算子を使用するには、被演算子で ``java.lang.Comparable`` を実装する必要があります。"

#: ../../expression.rst:89
#: 12e4e5b9598b4b2cba8ff37ffb00304f
msgid "The operands for ``<``, ``<=``, ``>`` and ``>=`` must not be ``null``."
msgstr "``<``, ``<=``, ``>`` と ``>=`` の 被演算子 は ``null`` であってはなりません。"

#: ../../expression.rst:99
#: 2c5d51fe4ee64ee3abc29bfd46ee0484
msgid "Logical operators"
msgstr "論理演算子"

#: ../../expression.rst:101
#: be93e704cf8f4ba3a0b3c2ffda2dab85
msgid "You can use the following logical operators:"
msgstr "次の論理演算子を使用できます。"

#: ../../expression.rst:106
#: c8f7b532eca2495d8a10d673ca7a15aa
msgid "!"
msgstr ""

#: ../../expression.rst:106
#: 7697069342eb4babad8316feb3522417
msgid "Logical complement operator"
msgstr "論理否定演算子"

#: ../../expression.rst:107
#: b9ff115d7f1645378cdb0409a37b7d30
msgid "&&"
msgstr ""

#: ../../expression.rst:107
#: dd81a03d1aa648b3ae6e64c22920785f
msgid "Conditional-AND operator"
msgstr "論理積演算子"

#: ../../expression.rst:108
#: e5c15a7b8d28423aacbe48719201d52e
msgid "||"
msgstr ""

#: ../../expression.rst:108
#: 57cbce48f41e4f849e0244a55a1bee9f
msgid "Conditional-OR operator"
msgstr "論理和演算子"

#: ../../expression.rst:111
#: 6abbae8a666e480f93ae29ea14fcdd99
msgid "With parentheses, you can override the precedence of operators."
msgstr "括弧を使用すると、演算子の優先順位をオーバーライドできます。"

#: ../../expression.rst:121
#: 83bcc057e4ab4893ae49f66ebf7f66cd
msgid "Arithmetic operators"
msgstr "算術演算子"

#: ../../expression.rst:123
#: ccdbe8689f6840e1ab32eee911fda698
msgid "You can use the following arithmetic operators:"
msgstr "次の算術演算子を使用できます。"

#: ../../expression.rst:128
#: 1a9795d7df394ae89169a78aea8b5e87
msgid "\\+"
msgstr ""

#: ../../expression.rst:128
#: 0b5b18c083374f3cafac122cc95d7fa3
msgid "Additive operator"
msgstr "加法演算子"

#: ../../expression.rst:130
#: 09fbd428b3294e088ff930d7c930d8d2
msgid "\\-"
msgstr ""

#: ../../expression.rst:130
#: 4c410730e9784f6ba096b1a68e785ee5
msgid "Subtraction operator"
msgstr "減算演算子"

#: ../../expression.rst:132
#: 4f45586c630741928e48c815d9b44402
msgid "\\*"
msgstr ""

#: ../../expression.rst:132
#: 2e67afa31a734f6aad084bf13692c88b
msgid "Multiplication operator"
msgstr "乗算演算子"

#: ../../expression.rst:134
#: 6edae61404aa46a0a78c4e15ca06fe7c
msgid "/"
msgstr ""

#: ../../expression.rst:134
#: a860769510844c8abb0fdff8127ea194
msgid "Division operator"
msgstr "除算演算子"

#: ../../expression.rst:136
#: bd3bdb68c8a24c10874d432755dd1d13
msgid "%"
msgstr ""

#: ../../expression.rst:136
#: 1e4578c931084be783d02e4d20e5f88d
msgid "Remainder operator"
msgstr "剰余演算子"

#: ../../expression.rst:139
#: 4abccc0d8a5d4849a00699092a56a0a6
msgid "Operands must be numeric type."
msgstr "被演算子は数値型である必要があります。"

#: ../../expression.rst:147
#: 8f14ae2a99c445db8f561925cd387ac1
msgid "String concatenation operator"
msgstr "文字列連結演算子"

#: ../../expression.rst:149
#: 4f6b455629dc4106aeac2872d980d0d9
msgid "You can concatenate characters using a concatenation operator ``+``."
msgstr "連結演算子 ``+`` を使用して文字を連結できます。"

#: ../../expression.rst:151
#: 7933abbed17649afabc7290e8e2ec498
msgid "The operand must be one of the following types:"
msgstr "被演算子は次のいずれかのタイプである必要があります。"

#: ../../expression.rst:154
#: 7af215aa8af644ddb484be20ac218f5a
msgid "java.lang.Character"
msgstr ""

#: ../../expression.rst:163
#: ef2c74abccfd4749bd641f961c735e16
msgid "Calling instance methods"
msgstr "インスタンスメソッドの呼び出し"

#: ../../expression.rst:165
#: 59a298366267478d8b6f41bcc584003f
msgid "You can call instance methods with the method names separated by dots ``.``. The method visibility must be public."
msgstr "メソッド名をドット ``.`` で区切ってインスタンスメソッドを呼び出すことができます。メソッドの可視性はパブリックである必要があります。"

#: ../../expression.rst:175
#: 3e7142327e8d4372b3d228765cb24f86
msgid "If the method has no argument, specify ``()`` after the method name."
msgstr "メソッドに引数がない場合は、メソッド名の後に ``()`` を指定します。"

#: ../../expression.rst:185
#: 20f85839de974e14b2e1845fb38da16d
msgid "Accessing to instance fields"
msgstr "インスタンスフィールドへのアクセス"

#: ../../expression.rst:187
#: bce840ecdf424ea4b90fbb759835b084
msgid "You can access instance fields with the field names separated by dots ``.``. Even if the visibility is private, you can access it."
msgstr "フィールド名をドット ``.`` で区切ってインスタンスフィールドにアクセスできます。可視性が非公開であっても、アクセスできます。"

#: ../../expression.rst:196
#: fdc3ca9492894031a7ec9c634703f84a
msgid "Calling static methods"
msgstr "静的メソッドの呼び出し"

#: ../../expression.rst:198
#: ff3623193e6941e7ac57387cdf6383ad
msgid "You can call static methods by continuing the method names with the fully qualified class names enclosed in ``@``. The method visibility must be public."
msgstr "静的メソッドを呼び出すには、 ``@`` で囲んだ完全修飾クラス名をメソッド名に続けます。メソッドの可視性はパブリックである必要があります。"

#: ../../expression.rst:210
#: 25f37b8d9f904d9bb0e1b27979336508
msgid "Accessing to static fields"
msgstr "静的フィールドへのアクセス"

#: ../../expression.rst:212
#: 053bf663c2454b0d8319be275c432f1a
msgid "You can access static fields by continuing the field name with the fully qualified class name enclosed in ``@``. Even if the visibility is private, you can access it."
msgstr "静的フィールドにアクセスするには、フィールド名に ``@`` で囲まれた完全修飾クラス名を続けます。可視性が非公開であっても、アクセスできます。"

#: ../../expression.rst:224
#: af9c5043006f447d86b915064f937791
msgid "Using built-in functions"
msgstr "組み込み関数の使用"

#: ../../expression.rst:226
#: 0bed16085a1049feba50414f4490bbf9
msgid "Built-in functions are utilities mainly for changing values of binding variables before binding them to SQL."
msgstr "組み込み関数は、主に SQL にバインドする前にバインド変数の値を変更するためのユーティリティです。"

#: ../../expression.rst:229
#: 12ec9e871a0a486fb52416e2e161afc7
msgid "For example, when you run a prefix search with a LIKE clause, you can write like this:"
msgstr "たとえば、LIKE 句を使用して前方検索を実行する場合は、次のように記述できます。"

#: ../../expression.rst:237
#: fbe1ff989d1743b1b315ff7463c54285
msgid "``@prefix(employee.employeeName)`` means that we pass ``employee.employeeName`` to the ``@prefix`` function. The ``@prefix`` function converts the character sequence which is received by the parameter to a string for forward match search. It also escapes special characters. For example, if the value of ``employee.employeeName`` is ``ABC``, it's converted to ``ABC%``. If the value of ``employee.employeeName`` contains ``%`` such as ``AB%C``, the ``%`` is escaped with a default escape sequence ``$``, therefore the value is converted to ``AB$%C%``."
msgstr "``@prefix(employee.employeeName)`` は、``@prefix`` 関数に ``employee.employeeName`` を渡すことを意味します。 ``@prefix`` 関数はパラメータで受け取った文字列を前方一致検索用の文字列に変換します。特殊文字もエスケープされます。たとえば、 ``employee.employeeName`` の値が ``ABC`` の場合、 ``ABC%`` に変換されます。 ``employee.employeeName`` の値に ``AB%C`` などの ``%`` が含まれている場合、その ``%`` はデフォルトのエスケープシーケンス ``$`` でエスケープされるため、値は ``AB$%C%`` に変換されます。"

#: ../../expression.rst:247
#: 1e535d4a51a84a6a903858001e85d43f
msgid "You can use following function signatures:"
msgstr "次の関数シグネチャを使用できます。"

#: ../../expression.rst:253
#: 5bc4724d2d314649b3c6faed8acf111e
msgid "String @escape(CharSequence text, char escapeChar = '$')"
msgstr ""

#: ../../expression.rst:250
#: 0c5fc13889d04c469b79abad6b3ae372
msgid "Escapes the character sequence for LIKE operation. The return value is a string which is a result of escaping the character sequence. If ``escapeChar`` isn't specified, ``$`` is used as a default escape sequence. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "LIKE 操作の文字シーケンスをエスケープします。戻り値は文字列をエスケープした結果の文字列です。 ``escapeChar`` が指定されていない場合、デフォルトのエスケープシーケンスとして ``$`` が使用されます。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:260
#: 0075ece9430f41599a053f53ed3c3fa2
msgid "String @prefix(CharSequence prefix, char escapeChar = '$')"
msgstr ""

#: ../../expression.rst:256
#: 6afa10753e24406cb6e3e3e1513e74a6
msgid "Converts the character sequence for prefix search. The return value is a string which is a result of escaping the character sequence and adding a wild card character at the end. If ``escapeChar`` isn't specified, ``$`` is used as a default escape sequence. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "前方一致検索用の文字列へ変換します。戻り値は、文字シーケンスをエスケープし、末尾にワイルドカード文字を追加した結果の文字列です。 ``escapeChar`` が指定されていない場合、デフォルトのエスケープシーケンスとして ``$`` が使用されます。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:267
#: ddd77c0267c3404d9b8d0f95083a6789
msgid "String @infix(CharSequence infix, char escapeChar = '$')"
msgstr ""

#: ../../expression.rst:263
#: 81a78dac29414485b7f52d5e110eefa9
msgid "Converts the character sequence for infix search. The return value is a string which is a result of escaping the character sequence and adding wild card characters at the beginning and the end. If ``escapeChar`` isn't specified, ``$`` is used as a default escape sequence. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "中置検索用の文字列へ変換します。戻り値は、文字シーケンスをエスケープし、先頭と末尾にワイルドカード文字を追加した結果の文字列です。 ``escapeChar`` が指定されていない場合、デフォルトのエスケープシーケンスとして ``$`` が使用されます。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:274
#: 6c56f2e37fa047d3b2ff4fd99275378d
msgid "String @suffix(CharSequence suffix, char escapeChar = '$')"
msgstr ""

#: ../../expression.rst:270
#: 71d95f479579487192ceb238867029cc
msgid "Converts the character sequence for suffix search. The return value is a string which is a result of escaping the character sequence and adding a wild card character at the beginning. If ``escapeChar`` isn't specified, ``$`` is used as a default escape sequence. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "接尾辞検索用の文字列へ変換します。戻り値は、文字シーケンスをエスケープし、先頭にワイルドカード文字を追加した結果の文字列です。 ``escapeChar`` が指定されていない場合、デフォルトのエスケープシーケンスとして ``$`` が使用されます。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:279
#: c8a91de5382f427287ef75117c1e3643
msgid "java.util.Date @roundDownTimePart(java.util.Date date)"
msgstr ""

#: ../../expression.rst:277
#: ../../expression.rst:282
#: 44d2a3c82745426cb2af73c48529629b
#: 94e74c54584c41708212f1e10bdf1c88
msgid "Rounds down the time part. The return value is a new Date which is rounded down the time part. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "時刻部分を切り捨てます。戻り値は、時刻部分を切り捨てた新しい日付です。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:284
#: 41ec761c2f4640a694d590436e817ea7
msgid "java.sql.Date @roundDownTimePart(java.sql.Date date)"
msgstr ""

#: ../../expression.rst:289
#: 523ca5db4ea64e62a69cd692436a6731
msgid "java.sql.Timestamp @roundDownTimePart(java.sql.Timestamp timestamp)"
msgstr ""

#: ../../expression.rst:287
#: 561398f921a14b0e806c33b3ce6b4bd1
msgid "Rounds down the time part. The return value is a new Timestamp which is rounded down the time part. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "時刻部分を切り捨てます。戻り値は、時刻部分を切り捨てた新しいタイムスタンプです。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:294
#: 127fa36d909f4e1bbed03d261eeeca9f
msgid "java.time.LocalDateTime @roundDownTimePart(java.time.LocalDateTime localDateTime)"
msgstr ""

#: ../../expression.rst:292
#: 25c7d13f26db47d5af58585c0108e7e3
msgid "Rounds down the time part. The return value is a new LocalDateTime which is rounded down the time part. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "時刻部分を切り捨てます。戻り値は、時刻部分を切り捨てた新しい LocalDateTime です。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:299
#: d24d57eb5cfb4f0898a2282e1e9edf81
msgid "java.util.Date @roundUpTimePart(java.util.Date date)"
msgstr ""

#: ../../expression.rst:297
#: ../../expression.rst:302
#: 406db5d8724c4d5ebc1b785525cb9384
#: db62a3df050b434bb5744d228e6e03ec
msgid "Rounds up the time part. The return value is a new Date which is rounded up the time part. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "時刻部分を切り上げます。戻り値は、時刻部分を切り上げた新しい日付です。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:304
#: 15757cf75848486d84271bbcd3745137
msgid "java.sql.Date @roundUpTimePart(java.sql.Date date)"
msgstr ""

#: ../../expression.rst:309
#: 92caa525d80245e59d9ba5670abe0b4d
msgid "java.sql.Timestamp @roundUpTimePart(java.sql.Timestamp timestamp)"
msgstr ""

#: ../../expression.rst:307
#: 7281c9c5a3754daca6a4ed7cf5e86fc4
msgid "Rounds up the time part. The return value is a new Timestamp which is rounded up the time part. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "時刻部分を切り上げます。戻り値は、時刻部分を切り上げた新しいタイムスタンプです。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:314
#: a80328cbabf245c49fa61b110e78265b
msgid "java.time.LocalDateTime @roundUpTimePart(java.time.LocalDateTime localDateTime)"
msgstr ""

#: ../../expression.rst:312
#: bf460e2551994d74b9340d026c1fa1e4
msgid "Rounds up the time part. The return value is a new LocalDateTime which is rounded up the time part. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "時間部分を切り上げます。戻り値は、時刻部分を切り上げた新しい LocalDateTime です。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:319
#: 73bef6f0402743b88a1b40fdb4728f8a
msgid "java.time.LocalDate @roundUpTimePart(java.time.LocalDate localDate)"
msgstr ""

#: ../../expression.rst:317
#: 2c5e3ad30288457c834205b0fb062c60
msgid "Returns the next day. The return value is a new LocalDate which is the next one after the argument. It returns ``null`` if you pass ``null`` as a parameter."
msgstr "翌日返却。戻り値は、引数の次の新しい LocalDate です。パラメータとして ``null`` を渡すと ``null`` を返します。"

#: ../../expression.rst:322
#: 9899a23253fb475e984b5472d8e97517
msgid "boolean @isEmpty(CharSequence charSequence)"
msgstr ""

#: ../../expression.rst:322
#: a03940a404e7455ab833d52eb0380b39
msgid "Returns ``true`` if the character sequence is ``null`` or the length is ``0``."
msgstr "文字シーケンスが ``null`` または長さが ``0`` の場合は ``true`` を返します。"

#: ../../expression.rst:325
#: bc9ef13c3c2747359e4c7e2c5a6ffad6
msgid "boolean @isNotEmpty(CharSequence charSequence)"
msgstr ""

#: ../../expression.rst:325
#: b2b8c84b133944a7b3c7af98658728e2
msgid "Returns ``true`` if the character sequence isn't ``null`` and the length isn't ``0``."
msgstr "文字シーケンスが ``null`` でなく、長さが ``0`` でない場合は ``true`` を返します。"

#: ../../expression.rst:329
#: 33adc4a10efe44a08a3607d0c5b3d1c1
msgid "boolean @isBlank(CharSequence charSequence)"
msgstr ""

#: ../../expression.rst:328
#: 1498ce2e1d93487aa1e008d2b5408efb
msgid "Returns ``true`` only if the character sequence is ``null``, the length is ``0``, or the sequence is formed with whitespaces only."
msgstr "文字シーケンスが ``null`` であるか、長さが ``0`` であるか、または文字シーケンスが空白のみで形成されている場合にのみ ``true`` を返します。"

#: ../../expression.rst:333
#: 8c9c5ea822934e9b8aeeee7f3abf2968
msgid "boolean @isNotBlank(CharSequence charSequence)"
msgstr ""

#: ../../expression.rst:332
#: a46709ebc72a48ac89a73e698d65f7e0
msgid "Returns ``true`` if the character sequence isn't ``null``, the length isn't ``0``, and the sequence isn't formed with whitespaces only."
msgstr "文字列が ``null`` でなく、長さが ``0`` でなく、文字列が空白だけで形成されていない場合は ``true`` を返します。"

#: ../../expression.rst:335
#: 65a6596145de4591a014aa25180d8999
msgid "These functions are correspond to the methods of ``org.seasar.doma.expr.ExpressionFunctions``."
msgstr "これらの関数は ``org.seasar.doma.expr.ExpressionFunctions`` のメソッドに対応します。"

#: ../../expression.rst:338
#: afab685e28484652a7711c8611c90ec5
msgid "Using custom functions"
msgstr "カスタム関数の使用"

#: ../../expression.rst:340
#: a22e2428f7344230872dae5a90149e61
msgid "You can define and use your own functions."
msgstr "独自の関数を定義して使用できます。"

#: ../../expression.rst:342
#: c7021e578ec342ae80977af40254eff1
msgid "You need to follow these settings when you use custom functions which you define by yourself:"
msgstr "自分で定義したカスタム関数を使用する場合は、次の設定に従う必要があります。"

#: ../../expression.rst:344
#: 20e9d6d8d5154a95868e2c1ad32b9a13
msgid "The function is defined as a method of a class which implements ``org.seasar.doma.expr.ExpressionFunctions``."
msgstr "この関数は ``org.seasar.doma.expr.ExpressionFunctions`` を実装したクラスのメソッドとして定義される"

#: ../../expression.rst:346
#: bbac0f060bae4d49b3e988d92114995c
msgid "The method is a public instance method."
msgstr "このメソッドはパブリック インスタンス メソッドである"

#: ../../expression.rst:347
#: 1f38e283402b4a64af714b682d261cd2
msgid "The class is registered as an option in :doc:`annotation-processing`. The key of the option is ``doma.expr.functions``."
msgstr "このクラスは ``doma.expr.functions`` をキーとして :doc:`annotation-processing` のオプションに指定される"

#: ../../expression.rst:349
#: 9c6ed55b30104e6a96b6f17a09b8bcc6
msgid "The instance of the class you create is used in an RDBMS dialect in your configuration class (The implementations of RDBMS dialect provided by Doma can receive ``ExpressionFunctions`` in the constructor)."
msgstr "作成したクラスのインスタンスは SQLダイアレクト で使用される (Doma によって提供される ダイアレクト の実装は コンストラクタで ``ExpressionFunctions`` を受け取ることができる)"

#: ../../expression.rst:353
#: aec6ba5813df41ceb2bb0ca47f4600be
msgid "To call a custom function, add ``@`` at the beginning of the function name like built-in functions. For example, you can call ``myfunc`` function like this:"
msgstr "カスタム関数を呼び出す場合は、組み込み関数と同様に関数名の先頭に ``@`` を付けます。たとえば、次のように ``myfunc`` 関数を呼び出すことができます。"


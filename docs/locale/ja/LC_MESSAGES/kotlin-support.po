msgid ""
msgstr ""
"Project-Id-Version: doma-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-17 05:50+0000\n"
"PO-Revision-Date: 2024-03-17 05:55\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: doma-docs\n"
"X-Crowdin-Project-ID: 657384\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /_build/gettext/kotlin-support.pot\n"
"X-Crowdin-File-ID: 182\n"
"Language: ja_JP\n"

#: ../../kotlin-support.rst:3
#: bdb9ad4764044f3ebe7d37446ee1dd91
msgid "Kotlin support"
msgstr "Kotlin サポート"

#: ../../kotlin-support.rst:6
#: 475fbd863e26403bbc9b84d50a3ffc7e
msgid "Contents"
msgstr "コンテンツ"

#: ../../kotlin-support.rst:8
#: 29cd210a84c74b1a8fbad059ad7bdb04
msgid "Doma supports `Kotlin <https://kotlinlang.org/>`_ 1.4.0 or later."
msgstr "Doma は、 `Kotlin <https://kotlinlang.org/>`_ 1.4.0 以降をサポートしています。"

#: ../../kotlin-support.rst:11
#: 5f1bce87fb134f50984f5bcee6bd600e
msgid "Best practices"
msgstr "ベストプラクティス"

#: ../../kotlin-support.rst:13
#: 376896ad496e4dc6bf6d61917be55691
msgid "Here are some recommended methods, such as defining classes and building them with Kotlin."
msgstr "Kotlinでクラスを定義してビルドするなど、おすすめの方法を紹介します。"

#: ../../kotlin-support.rst:16
#: 07f2917bc7c94f9ca01611dc4926c742
msgid "Entity classes"
msgstr "エンティティクラス"

#: ../../kotlin-support.rst:18
#: 118e27e83eb5449badcb588f7770e40b
msgid "Define as a plain class"
msgstr "プレーンクラスとして定義する"

#: ../../kotlin-support.rst:19
#: a19cc2c660f542fa8fe103394c078cea
msgid "Specify a ``Metamodel`` annotation to the ``metamodel`` element of ``@Entity``"
msgstr "``@Entity`` の ``metamodel`` 要素に ``Metamodel`` アノテーションを指定する"

#: ../../kotlin-support.rst:44
#: 53b89eb587d442e68f318b8bdf82f85f
msgid "Domain classes"
msgstr "ドメインクラス"

#: ../../kotlin-support.rst:46
#: ../../kotlin-support.rst:59
#: de05b5e8c98a4c40b177a2084643d3e8
#: 3cb6f6e5e6134704b3245d40d2876d99
msgid "Define as a data class"
msgstr "データクラスとして定義する"

#: ../../kotlin-support.rst:47
#: ../../kotlin-support.rst:60
#: 66ce54aa3be84806bd8b90879ec1f358
#: 772ed6b204164c54bfce402868d26866
msgid "Define only one constructor"
msgstr "コンストラクターを 1 つだけ定義する"

#: ../../kotlin-support.rst:48
#: 0307df919dd14d5ea449ebb1f9913d8b
msgid "Define only one property whose name is ``value`` in the constructor"
msgstr "コンストラクターでは、名前が ``value`` であるプロパティを 1 つだけ定義する"

#: ../../kotlin-support.rst:49
#: 411e640fbc4141f2a8f32c8144759a93
msgid "Use `val` for the property definition"
msgstr "プロパティ定義には `val` を使用する"

#: ../../kotlin-support.rst:57
#: d9f3b0522df6453881c2a9615821a64e
msgid "Embeddable classes"
msgstr "埋め込み可能クラス"

#: ../../kotlin-support.rst:61
#: b204619889924d7fb3b65d4686576fa4
msgid "Define properties only in the constructor"
msgstr "コンストラクター内でのみプロパティを定義する"

#: ../../kotlin-support.rst:62
#: 63ee73d2f7734645bdc0c34d7f5a1bb3
msgid "Use `val` for the property definitions"
msgstr "プロパティ定義には `val` を使用する"

#: ../../kotlin-support.rst:70
#: 1d0b9248575143c28717c580924a385b
msgid "Dao interfaces"
msgstr "Dao インターフェース"

#: ../../kotlin-support.rst:72
#: f2a05d7f5c1049e698bdaa8eee0c1e98
msgid "Specify a SQL template to ``@org.seasar.doma.Sql``"
msgstr "SQLテンプレートを ``@org.seasar.doma.Sql`` に指定する"

#: ../../kotlin-support.rst:73
#: ef1a62de4e7c4d02b23a57c951ec5c20
msgid "Use ``org.seasar.doma.jdbc.Result`` as the return type of ``@Delete``, ``@Insert`` and ``@Update``"
msgstr "``@Delete``、``@Insert``、および ``@Update`` の戻り値の型として ``org.seasar.doma.jdbc.Result`` を使用する"

#: ../../kotlin-support.rst:74
#: df8962b6eb3a441798c455e52831d04a
msgid "Use ``org.seasar.doma.jdbc.BatchResult`` as the return type of ``@BatchDelete``, ``@BatchInsert`` and ``@BatchUpdate``"
msgstr "``@BatchDelete``、 ``@BatchInsert`` 、 ``@BatchUpdate`` の戻り値の型として ``org.seasar.doma.jdbc.BatchResult`` を使用する"

#: ../../kotlin-support.rst:91
#: 94ad62f055864dd7b479f917d3c2ed11
msgid "Use `Destructuring Declarations <https://kotlinlang.org/docs/reference/multi-declarations.html>`_ for ``org.seasar.doma.jdbc.Result`` and ``org.seasar.doma.jdbc.BatchResult``"
msgstr "``org.seasar.doma.jdbc.Result`` と ``org.seasar.doma.jdbc.BatchResult`` に対しては `Destructuring Declarations <https://kotlinlang.org/docs/reference/multi-declarations.html>`_ を使用する"

#: ../../kotlin-support.rst:103
#: b93e8f6296a14e50b1d63feabdd0f997
msgid "Kotlin specific Criteria API"
msgstr "Kotlin 固有の Criteria API"

#: ../../kotlin-support.rst:107
#: affe2652a9bd4325baed3821002b8daa
msgid "Prefer the Kotlin specific Criteria API to DAO interfaces."
msgstr "DAO インターフェイスよりも Kotlin 固有の Criteria API を使ってください"

#: ../../kotlin-support.rst:109
#: 957104a6f4cf4f3c852d9f440397b50f
msgid "Doma provides Kotlin specific Criteria API, ``KEntityql`` and ``KNativeSql`` DSLs. They are very similar with the ``Entityql`` and ``NativeSql`` DSLs, which are described in :doc:`criteria-api`. The biggest feature of the ``KEntityql`` and ``KNativeSql`` DSLs is simplicity."
msgstr "Doma は、Kotlin 固有の Criteria API、``KEntityql`` および ``KNativeSql`` DSL を提供します。これらは、:doc:`criteria-api` で説明されている ``Entityql`` および ``NativeSql`` DSL と非常に似ています。  ``KEntityql`` と ``KNativeSql`` DSL の最大の特徴はそのシンプルさです。"

#: ../../kotlin-support.rst:113
#: 75bcd5cef63545dd96c32d86875b576d
msgid "For example, when you use ``KEntityql``, you have to accept a lambda parameter in a WHERE expression as follows:"
msgstr "たとえば、 ``Entityql`` を使用する場合は、次のように WHERE 式でラムダパラメータを受け入れる必要があります。"

#: ../../kotlin-support.rst:132
#: 6f4c2cf6e6c748ee90065dc5570121eb
msgid "The lambda parameter ``c`` is a bit annoying. On the other hand, when you use ``KEntityql``, the parameter is gone."
msgstr "ラムダパラメータ「c」は少し面倒です。一方、 ``KEntityql`` を使用すると、パラメータはなくなります。"

#: ../../kotlin-support.rst:152
#: 565498df9fe54c6188cc74d2472ee01c
msgid "You can see a lot of sample code `here <https://github.com/domaframework/doma-it/tree/master/kotlin/src/test/kotlin/org/seasar/doma/it/criteria>`_."
msgstr "ここ <https://github.com/domaframework/doma-it/tree/master/kotlin/src/test/kotlin/org/seasar/doma/it/criteria>`_ で多くのサンプル コードを参照できます。"

#: ../../kotlin-support.rst:154
#: 356595ba6e4845f09135ea2a9e5ab034
msgid "The ``KEntityql`` and ``KNativeSql`` DSLs are included in doma-kotlin.jar. Note that you should depend on doma-kotlin instead of doma-core in your build script. You can write build.gradle.kts as follows:"
msgstr "``KEntityql`` および ``KNativeSql`` DSL は doma-kotlin.jar に含まれています。ビルド スクリプトでは doma-core ではなく doma-kotlin に依存する必要があることに注意してください。 build.gradle.kts は次のように記述できます。"

#: ../../kotlin-support.rst:165
#: c4be33c571ac41c2ae26d45439839f16
msgid "Code Generation"
msgstr "コード生成"

#: ../../kotlin-support.rst:167
#: 49387b45af1046459a8f5e1930a36d20
msgid "Use `Doma CodeGen Plugin <https://github.com/domaframework/doma-codegen-plugin>`_. This plugin support Kotlin code generation."
msgstr "`Doma CodeGen プラグイン <https://github.com/domaframework/doma-codegen-plugin>`_ を使用してください。このプラグインは Kotlin コード生成をサポートします。"

#: ../../kotlin-support.rst:171
#: 40ee00d34be34fe6827f5cadca59c91c
msgid "Using kapt in Gradle"
msgstr "Gradle での kapt の使用"

#: ../../kotlin-support.rst:173
#: b43495ce435446de920d5b3c1cea7bfa
msgid "Annotation processors are supported in Kotlin with the `kapt <https://kotlinlang.org/docs/reference/kapt.html>`_ compiler plugin."
msgstr "アノテーション プロセッサは、Kotlin で `kapt <https://kotlinlang.org/docs/reference/kapt.html>`_ コンパイラ プラグインを使用してサポートされています。"

#: ../../kotlin-support.rst:176
#: 073bf9ebca1b43fc8d46e884bf403e61
msgid "Add the dependencies using the `kapt` and `implementation` configuration in your dependencies block. For example, you can write build.gradle.kts as follows:"
msgstr "依存関係ブロックの `kapt` および `implementation` を使用して依存関係を追加します。たとえば、次のように build.gradle.kts を記述できます。"

#: ../../kotlin-support.rst:186
#: 43c8afa74e674fe5ac82f03507ade465
msgid "To simplify your build script, we recommend you use the `Doma Compile Plugin <https://github.com/domaframework/doma-compile-plugin>`_:"
msgstr "ビルド スクリプトを簡略化するには、`Doma コンパイル プラグイン  <https://github.com/domaframework/doma-compile-plugin>`_ を使用することをお勧めします。"

#: ../../kotlin-support.rst:190
#: 09844b461b474f7c9b1b2e9f6fc34124
msgid "Sample project"
msgstr "サンプルプロジェクト"

#: ../../kotlin-support.rst:192
#: 85a054e664a9471db3832db2959f167c
msgid "`kotlin-sample <https://github.com/domaframework/kotlin-sample>`_"
msgstr ""


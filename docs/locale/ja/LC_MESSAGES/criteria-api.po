msgid ""
msgstr ""
"Project-Id-Version: doma-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-17 06:37+0000\n"
"PO-Revision-Date: 2024-03-17 13:47\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: doma-docs\n"
"X-Crowdin-Project-ID: 657384\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /_build/gettext/criteria-api.pot\n"
"X-Crowdin-File-ID: 184\n"
"Language: ja_JP\n"

#: ../../criteria-api.rst:3
#: 8440d9b64a3147e0a1e8f25a399e4476
msgid "Criteria API"
msgstr ""

#: ../../criteria-api.rst:6
#: 2c821c0d913546c2b63db756d40ebb33
msgid "Contents"
msgstr "コンテンツ"

#: ../../criteria-api.rst:9
#: 2dfa9597553841b6bd4704122bd18d14
msgid "Introduction"
msgstr "イントロダクション"

#: ../../criteria-api.rst:13
#: a30b5a80050c4b1baf30a67e2ca439a0
msgid "In Kotlin environment, use Kotlin specific DSLs instead of the following DSLs. See :ref:`kotlin-specific-criteria-api`."
msgstr "Kotlin 環境では、次の DSL の代わりに Kotlin 固有の DSL を使用できます。 :ref:`kotlin-specific-criteria-api` を参照してください。"

#: ../../criteria-api.rst:16
#: 3a1aca012b5c48b2b67578cf396c7b59
msgid "There are two kinds of DSLs in the Criteria API:"
msgstr "Criteria API には 2 種類の DSL があります。"

#: ../../criteria-api.rst:18
#: b132c24e9e894d4485379b2ee25e527b
msgid "The Entityql DSL"
msgstr "Entityql DSL"

#: ../../criteria-api.rst:19
#: 266a0b6eb77a457dbf3a696ad85ebed2
msgid "The NativeSql DSL"
msgstr "NativeSql DSL"

#: ../../criteria-api.rst:21
#: 4a3ccec127d44a388687108ba2b7911d
msgid "Both requires predefined Entity classes and metamodel classes."
msgstr "どちらも、事前定義されたエンティティクラスとメタモデルクラスを必要とします。"

#: ../../criteria-api.rst:23
#: d58d473556614d51b452d071555f10d8
msgid "We use the following Entity classes to show you some examples:"
msgstr "次のエンティティクラスを使用して、いくつかの例を示します。"

#: ../../criteria-api.rst:99
#: 7673a65841f54659b3e6cb68b585158a
msgid "Note that the above classes are annotated with ``@Entity(metamodel = @Metamodel)``. The ``metamodel = @Metamodel`` indicates that the annotated entity has a corresponding metamodel class generated by Doma's annotation processor ."
msgstr "上記のクラスには ``@Entity(metamodel = @Metamodel)`` というアノテーションが付けられていることに注意してください。 ``metamodel = @Metamodel`` は、エンティティクラスに対応するメタモデルクラスをDoma の アノテーションプロセッサー により生成することを示します。"

#: ../../criteria-api.rst:103
#: 6170ebfe260b44f882c8259cb769f99d
msgid "In our examples, the metamodel classes are ``Employee_``, ``Department_``, ``Emp_`` and ``Dept_``. These metamodels allow you to make your query typesafe."
msgstr "この例では、メタモデルクラスは ``Employee_``、``Department_``、``Emp_``、および ``Dept_`` です。これらのメタモデルクラスを使用すると、クエリをタイプセーフに構築できます。"

#: ../../criteria-api.rst:106
#: 781f18d143d64249bedbe3ae2aefbcd1
msgid "You can customize the name of the metamodels by the Metamodel annotation elements."
msgstr "メタモデルの名前は、メタモデルのアノテーション要素によってカスタマイズできます。"

#: ../../criteria-api.rst:108
#: 0455d34034624af7bcf23afb20d6cfa1
msgid "To customize all metamodels in bulk, you can use the annotation processor options. See :doc:`annotation-processing` and check the following options:"
msgstr "すべてのメタモデルを一括でカスタマイズするには、アノテーションプロセッサのオプションを使用できます。 :doc:`annotation-processing` を参照して、次のオプションを確認してください。"

#: ../../criteria-api.rst:111
#: 7fab49c89a7e44cab653fc55d759aa91
msgid "doma.metamodel.enabled"
msgstr ""

#: ../../criteria-api.rst:112
#: 9fecd79d09d848b0a5a59f40dc0b21ea
msgid "doma.metamodel.prefix"
msgstr "doma.metamodel.prefix"

#: ../../criteria-api.rst:113
#: d78240f605954fbc99aeb3ea22c8d1a8
msgid "doma.metamodel.suffix"
msgstr "doma.metamodel.suffix"

#: ../../criteria-api.rst:116
#: 5515a2a541664c96abd8be396038a991
msgid "Entityql DSL"
msgstr ""

#: ../../criteria-api.rst:118
#: 92adf0dc09144a3299bbc51332516af0
msgid "The Entityql DSL can query and associate entities. The entry point is the ``org.seasar.doma.jdbc.criteria.Entityql`` class. This class has the following methods:"
msgstr "Entityql DSL は、エンティティをクエリして関連付けることができます。エントリポイントは ``org.seasar.doma.jdbc.criteria.Entityql`` クラスです。このクラスには次のメソッドがあります。"

#: ../../criteria-api.rst:122
#: ../../criteria-api.rst:173
#: 9a2755aa2c994b4dbea9b5788d3bfdb4
#: 776c1092078347299e80b4c2b85585af
msgid "from"
msgstr ""

#: ../../criteria-api.rst:123
#: ../../criteria-api.rst:175
#: 2c325947e35449ad98accd457b56b0c6
#: 52ab9949e5d641589f479a4f3378c4d8
msgid "insert"
msgstr "追加"

#: ../../criteria-api.rst:124
#: ../../criteria-api.rst:174
#: b97508e7c62d4335b320f68a24224dcd
#: ea80f2c09eee4d3295bdaa0ad8c210eb
msgid "delete"
msgstr "削除"

#: ../../criteria-api.rst:125
#: ../../criteria-api.rst:176
#: 3a32423cb2794921b45e9b7ae39e644d
#: d4e4e1efe43142d4998136aee822bc4c
msgid "update"
msgstr "更新"

#: ../../criteria-api.rst:127
#: 6a9d4f202a4243748559da31261de58e
msgid "You can instantiate the ``Entityql`` class as follows:"
msgstr "次のように ``Entityql`` クラスをインスタンス化できます。"

#: ../../criteria-api.rst:133
#: 3010fa7e753840259e744a1bf6bf491f
msgid "For example, to query ``Employee`` and ``Department`` entities and associate them, write as follows:"
msgstr "たとえば、 ``Employee`` エンティティと ``Department`` エンティティをクエリしてそれらを関連付けるには、次のように記述します。"

#: ../../criteria-api.rst:154
#: ../../criteria-api.rst:201
#: ../../criteria-api.rst:358
#: ../../criteria-api.rst:382
#: ../../criteria-api.rst:408
#: ../../criteria-api.rst:433
#: ../../criteria-api.rst:448
#: ../../criteria-api.rst:477
#: ../../criteria-api.rst:547
#: ../../criteria-api.rst:570
#: ../../criteria-api.rst:637
#: ../../criteria-api.rst:657
#: ../../criteria-api.rst:693
#: ../../criteria-api.rst:749
#: ../../criteria-api.rst:855
#: ../../criteria-api.rst:871
#: ../../criteria-api.rst:920
#: ../../criteria-api.rst:963
#: ../../criteria-api.rst:992
#: ../../criteria-api.rst:1011
#: ../../criteria-api.rst:1039
#: ../../criteria-api.rst:1070
#: ../../criteria-api.rst:1165
#: ../../criteria-api.rst:1240
#: ../../criteria-api.rst:1270
#: ../../criteria-api.rst:1345
#: ../../criteria-api.rst:1388
#: ../../criteria-api.rst:1412
#: ../../criteria-api.rst:1491
#: ../../criteria-api.rst:1533
#: ../../criteria-api.rst:1576
#: ../../criteria-api.rst:1609
#: ../../criteria-api.rst:1630
#: ../../criteria-api.rst:1668
#: ../../criteria-api.rst:1711
#: ../../criteria-api.rst:1758
#: b1b3815ca2fd4d57996133d2e7ce8a42
#: 4434812dad8945c79fd4e3deac86d821
#: 3a23781f0f8943f4b1bce6b190767e34
#: 96bf7f614d8441f59edd18eab3e1c142
#: 278d10ce18e743f784822ee8bf9bb7c0
#: 009e131b6188405e9574b9c516330599
#: 066487fb4be04ca39c93fdf0d1803512
#: 9d38839ad2a4450f8150f6afe5610742
#: 6df0f1c491144bd1a65db5244f3d6033
#: 6249b1fe2da54ecf9fdd11f2551f8d2a
#: bf7c9068288c480a885aa8296872ff28
#: dd295de489d94fa281d4155dba314844
#: 24adeda77a1a47c2a170bc284eaf24ad
#: 8cb6db8f13bb45488cbe2fb729a722de
#: a496be1705d24f138d5f7d5bda204e17
#: e2b76e15186a47bf8f91a851777d9d73
#: 928904a8ca0041859d272135bd6e0e94
#: 1f66d31eacad4d7884445ed49b952dca
#: deb04b9501724e36b951acf22106fc40
#: 8fafefb6be964e2cbfa0a6d0747d79e1
#: 6a7905dd3353484ab7eca67b689cbd9e
#: bde619177fe34a5397aa315670c0a14f
#: db86a8adc39e491da9b08c041662a310
#: cc22d2ad5b35411cbe81debc2bc9ad97
#: 394be47f678d40019bb950f8fadfe2d3
#: 2ee8c26c8a7748e181ece3e30afae234
#: 75910a7121b647638a81b015504f007f
#: ece5b23da16d4fbdba539657fa064dfa
#: dc6c883bb4ec476bb6dd87389083116b
#: 15fdc257135b40228e6ddb9b5c260d92
#: 78b2f42dcd494a23804cd4aac208966a
#: b33d9124fc244957990151f15aab5a77
#: a639ad0f4b4b4830a27d17849fb72ccb
#: 9116d75c75014f7cb6f6bdeaf131ea5a
#: f70004c0b89d4fa890154b45add39b5b
#: b1e6be380d4b45008522f817b6753ebe
msgid "The above query issues the following SQL statement:"
msgstr "上記のクエリは次の SQL ステートメントを発行します。"

#: ../../criteria-api.rst:165
#: 8ccd797da56d4a41a8038457be4c6451
msgid "NativeSql DSL"
msgstr ""

#: ../../criteria-api.rst:167
#: db809b9c53ef4161a3357fd2fd2d906c
msgid "The NativeSql DSL can issue more complex SQL statements rather than the Entityql DSL. But note that the NativeSql DSL doesn't support to associate entities."
msgstr "NativeSql DSL は、Entityql DSL よりも複雑な SQL ステートメントを発行できます。ただし、NativeSql DSL はエンティティの関連付けをサポートしていないことに注意してください。"

#: ../../criteria-api.rst:170
#: a5a946e8b1224154a93110e46670b218
msgid "The entry point is the ``org.seasar.doma.jdbc.criteria.NativeSql`` class. This class has the following methods:"
msgstr "エントリポイントは ``org.seasar.doma.jdbc.criteria.NativeSql`` クラスです。このクラスには次のメソッドがあります。"

#: ../../criteria-api.rst:178
#: 8a2c26ccb525476687c53441115538b7
msgid "You can instantiate the ``NativeSql`` class as follows:"
msgstr "次のように ``NativeSql`` クラスをインスタンス化できます。"

#: ../../criteria-api.rst:184
#: 91d5217a34e948a892fc63222a637d74
msgid "For example, to query two columns with GROUP BY and HAVING clauses, write as follows:"
msgstr "たとえば、GROUP BY 句と HAVING 句を使用して 2 つの列をクエリするには、次のように記述します。"

#: ../../criteria-api.rst:212
#: 0c5638df6d3f446b86eded6cc114eedb
msgid "The difference between two DSLs"
msgstr "2 つの DSL の違い"

#: ../../criteria-api.rst:214
#: 70e8c9ffa68947d6a86f20ba876d2a02
msgid "The biggest difference between two DSLs is that the Entityql DSL removes duplicated data from the fetched results, but the NativeSQL DSL doesn't."
msgstr "2 つの DSL の最大の違いは、Entityql DSL はフェッチされた結果から重複データを削除しますが、NativeSQL DSL は削除しないことです。"

#: ../../criteria-api.rst:217
#: 2558d85601c848f987ea293cbb3b7deb
msgid "See the following example:"
msgstr "次の例を参照してください。"

#: ../../criteria-api.rst:235
#: 2199a6c797c54a458fc44f7249d46fe1
msgid "Both (1) and (2) issue the same SQL statement as follows:"
msgstr "(1) と (2) は両方とも、次のように同じ SQL ステートメントを発行します。"

#: ../../criteria-api.rst:243
#: 14d2a1bb51b54dfaa1b2c03e82b71a1c
msgid "The ResultSet contains 14 rows, but the Entityql DSL returns only 3 rows because it removes duplicate Department entities. The Entityql DSL uses the id properties to know the uniqueness of the entities."
msgstr "ResultSet には 14 行が含まれていますが、Entityql DSL は重複するDepartment エンティティを削除するため、3 行のみを返します。 Entityql DSL は、id プロパティを使用してエンティティの一意性を認識します。"

#: ../../criteria-api.rst:247
#: 9a0c9f8825c2499db66e54236ca8c096
msgid "On the other hand, the NativeSql DSL returns the data as it retrieves from the database. It puts results into entity objects, but it handles them as the plain DTOs."
msgstr "一方、NativeSql DSL は、データベースから取得したデータを返します。結果はエンティティオブジェクトに格納されますが、それらはプレーンな DTO として処理されます。"

#: ../../criteria-api.rst:251
#: 4fc6d00981ec43deaae21d3a66b58252
msgid "Select statement"
msgstr "Select ステートメント"

#: ../../criteria-api.rst:254
#: f0079b04bea14ea8b7759b61eab8788f
msgid "Select settings (Entityql, NativeSql)"
msgstr "Select 設定 (Entityql, NativeSql)"

#: ../../criteria-api.rst:256
#: ../../criteria-api.rst:1196
#: ../../criteria-api.rst:1282
#: ../../criteria-api.rst:1429
#: dbb7c9e5e6e049afae82890b4b5db8a9
#: 9a710bc476474d63bb6709c3fb2f7af7
#: 27a1a7c1be3248b585f663ec513ace5f
#: 5dc231d670914bc4afc7f49e26e7c77a
msgid "We support the following settings:"
msgstr "次の設定をサポートしています。"

#: ../../criteria-api.rst:258
#: ../../criteria-api.rst:1198
#: ../../criteria-api.rst:1431
#: 1c1f9a9f22594595b6363b426b9e9ed0
#: fcc0b54181fd447f9732979fa7fd7395
#: 9be9fb5135384742bbac446ee34018dd
msgid "allowEmptyWhere"
msgstr ""

#: ../../criteria-api.rst:259
#: ../../criteria-api.rst:1200
#: ../../criteria-api.rst:1284
#: ../../criteria-api.rst:1433
#: 40e5e60a36c24f8dbe43b48425436063
#: 97d7d42f2fdc4ff0af162d314275be02
#: 0e6e89621be748bb81df8b0155a9f961
#: 1d6e51f1944346399d1f477a340ad395
msgid "comment"
msgstr ""

#: ../../criteria-api.rst:260
#: 028c7455be9041bd870f9adb74aa379c
msgid "fetchSize"
msgstr ""

#: ../../criteria-api.rst:261
#: f20fdeb821794374a91ec47394120bba
msgid "maxRows"
msgstr ""

#: ../../criteria-api.rst:262
#: ../../criteria-api.rst:1202
#: ../../criteria-api.rst:1285
#: ../../criteria-api.rst:1435
#: ee87b4d906184f0bbdd7fdd911448066
#: a8a3749a32064ae6bd33910742406844
#: 40c9dcfb61a449ba970cef9582d556e0
#: ffde314d5e68443693cc98a6472fa9d2
msgid "queryTimeout"
msgstr ""

#: ../../criteria-api.rst:263
#: ../../criteria-api.rst:1203
#: ../../criteria-api.rst:1286
#: ../../criteria-api.rst:1436
#: 2ae6777f8905412da1d7659351bfe187
#: 2280b1198f5349098fd629e6fe86e555
#: 1e99dc4a3c314c008550221f4058215b
#: 3a181ec705274a50861accae967de31d
msgid "sqlLogType"
msgstr ""

#: ../../criteria-api.rst:265
#: 7516cfd21f304903bb2fbe2b1e10589c
msgid "They are all optional. You can apply them as follows:"
msgstr "これらはすべてオプションです。それらは次のように適用できます。"

#: ../../criteria-api.rst:282
#: 08732242451d4e37a16161979c71e215
msgid "Fetching (Entityql, NativeSql)"
msgstr "フェッチ (Entityql、NativeSql)"

#: ../../criteria-api.rst:284
#: 2c9b027b9fd44c0c8477c9eb8d97d649
msgid "Both Entityql DSL and NativeSql DSL support the following methods to fetch data from a database:"
msgstr "Entityql DSL と NativeSql DSL はどちらも、データベースからデータをフェッチする次のメソッドをサポートしています。"

#: ../../criteria-api.rst:286
#: 63a47f419a904821820b0848a86dfb06
msgid "fetch"
msgstr ""

#: ../../criteria-api.rst:287
#: a47e9ce9c1f5464daeb3cd6fa709b3ec
msgid "fetchOne"
msgstr ""

#: ../../criteria-api.rst:288
#: 2f6ab0e28ffb4a24af667c9f94160750
msgid "fetchOptional"
msgstr ""

#: ../../criteria-api.rst:289
#: fcd2914c77484cb9a3b087c3df77e7d8
msgid "stream"
msgstr ""

#: ../../criteria-api.rst:313
#: 11b685ffc66f461498cc79f85613160d
msgid "Streaming (NativeSql)"
msgstr "ストリーミング (NativeSql)"

#: ../../criteria-api.rst:315
#: afd783e2db5146d68c1e29d9a639e3a8
msgid "The NativeSql DSL supports the following methods:"
msgstr "NativeSql DSL は次のメソッドをサポートしています。"

#: ../../criteria-api.rst:317
#: 89474d292f03466fb70f1e766917dfe2
msgid "mapStream"
msgstr ""

#: ../../criteria-api.rst:318
#: b2618c2688604fb7a85d1ee771c1a035
msgid "collect"
msgstr ""

#: ../../criteria-api.rst:335
#: d704683afb784cd681131fb71704057a
msgid "These methods handle the stream that wraps a JDBC ResultSet. So they are useful to process a large ResultSet effectively."
msgstr "これらのメソッドは、JDBC ResultSet をラップするストリームを処理します。したがって、これらは大規模な ResultSet を効率的に処理するのに役立ちます。"

#: ../../criteria-api.rst:339
#: 83b1c475dc464312998389a41bc34d4a
msgid "Select expression"
msgstr "Select 式"

#: ../../criteria-api.rst:342
#: 8988cb5b2a464efaa54711f54a57a13a
msgid "Entity selection (Entityql, NativeSql)"
msgstr "エンティティの検索 (Entityql、NativeSql)"

#: ../../criteria-api.rst:344
#: f336437ef08c4aba9f9fe61ecf884407
msgid "By default, the result entity type is the same as the one specified at the ``from`` method. See the following code:"
msgstr "デフォルトでは、結果のエンティティタイプは ``from`` メソッドで指定されたものと同じです。次のコードを参照してください。"

#: ../../criteria-api.rst:367
#: d4bff2f4a5c848acb48b8b697be8a3d5
msgid "To choose a joined entity type as the result entity type, call the ``select`` method as follows:"
msgstr "結合されたエンティティの型を結果のエンティティの型として選択するには、次のように ``select`` メソッドを呼び出します。"

#: ../../criteria-api.rst:391
#: 653182900cfe49eb9f35aa97405bbff3
msgid "Multiple entity selection (NativeSql)"
msgstr "複数のエンティティの検索 (NativeSql)"

#: ../../criteria-api.rst:393
#: e73c555aced84274be14c3a492b56029
msgid "You can specify multiple entity types and fetch them as a tuple as follows:"
msgstr "次のように、複数のエンティティの型を指定してタプルとしてフェッチできます。"

#: ../../criteria-api.rst:418
#: 47a40510c7924679825ca5ba4110ccb4
msgid "The entity included in the tuple may be null when the all properties of the entity are null."
msgstr "エンティティのすべてのプロパティが null の場合、タプルに含まれるエンティティは null になる可能性があります。"

#: ../../criteria-api.rst:421
#: c8cf160a3c274cc0972c73054ab702cd
msgid "Column projection (NativeSql)"
msgstr "カラムの射影 (NativeSql)"

#: ../../criteria-api.rst:423
#: cb964a4fcee742e98535080e1d8d4e31
msgid "To project columns, use the ``select`` method:"
msgstr "カラムを射影するには、 ``select`` メソッドを使用します。"

#: ../../criteria-api.rst:425
#: fd832dad4c1646568d9573747eb61c9e
msgid "To project one column, pass one property to the select method as follows:"
msgstr "1 つのカラムを射影するには、次のように 1 つのプロパティを select メソッドに渡します。"

#: ../../criteria-api.rst:439
#: 1d5b2bd0413c4069871d4d006734f894
msgid "To project two or more columns, pass two or more properties to the select method as follows:"
msgstr "2 つ以上のカラムを射影するには、次のように 2 つ以上のプロパティを select メソッドに渡します。"

#: ../../criteria-api.rst:454
#: 5ac3b9ffa65e431d98a4330bc8834d7b
msgid "Up to 9 numbers, the column results are held by ``Tuple2`` to ``Tuple9``. For more than 9 numbers, the results are held by ``Row``."
msgstr "9 個までのカラムの結果は ``Tuple2`` から ``Tuple9`` に保持されます。 9 個を超える数値の場合、結果は ``Row`` によって保持されます。"

#: ../../criteria-api.rst:457
#: 863c6fb1dd224331ad3d2b4c71f9d774
msgid "You can get a ``Row`` list explicitly by using ``selectAsRow`` as follows:"
msgstr "次のように ``selectAsRow`` を使用すると、 ``Row`` リストを明示的に取得できます。"

#: ../../criteria-api.rst:467
#: 5e1d84998588474ea08cb7858da85a66
msgid "Column projection and mapping (Entityql, NativeSql)"
msgstr "カラムの射影とマッピング (Entityql、NativeSql)"

#: ../../criteria-api.rst:469
#: 122be289e970482ca18be954ad53c550
msgid "To project columns and map them to an entity, use the ``selectTo`` method as follows:"
msgstr "カラムを射影してエンティティにマップするには、次のように ``selectTo`` メソッドを使用します。"

#: ../../criteria-api.rst:483
#: ec859d4b03d24d87b7c39e549a33c1fb
msgid "Note that the select clause of the above SQL statement contains the primary key \"EMPLOYEE_ID\". The ``selectTo`` method always includes the id properties of the entity, even if you don't."
msgstr "上記の SQL ステートメントの SELECT 句には主キー ``EMPLOYEE_ID`` が含まれていることに注意してください。 ``selectTo`` メソッドにエンティティの id プロパティが含まれていない場合でも、SELECT 句には常に主キーが含まれます。"

#: ../../criteria-api.rst:489
#: d46879f1d17c4ed687c9a18300094d1b
msgid "Where expression (Entityql, NativeSql)"
msgstr "Where 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:491
#: 1668226382234a14a22f76787b118a6b
msgid "We support the following operators and predicates:"
msgstr "次の演算子と述語がサポートされています。"

#: ../../criteria-api.rst:493
#: ../../criteria-api.rst:893
#: bb98556e66194263a181cea63eae3248
#: 1ec403e7c03944e485c8dec967b4f876
msgid "eq - (=)"
msgstr ""

#: ../../criteria-api.rst:494
#: ../../criteria-api.rst:894
#: 5697b4eddecf4d7ebfdb431589c899ce
#: 6c6a678132b44e7289bdf57b608c7a94
msgid "ne - (<>)"
msgstr ""

#: ../../criteria-api.rst:495
#: ../../criteria-api.rst:895
#: d79e33e5ee904384a49750832cb31dda
#: 248601cec194405ab4fd5f7a6d5a6de0
msgid "ge - (>=)"
msgstr ""

#: ../../criteria-api.rst:496
#: ../../criteria-api.rst:896
#: e9f518b587b84f3585316ecf22b02a4d
#: 38f7d9bcf24b4fd78caf79a356614a31
msgid "gt - (>)"
msgstr ""

#: ../../criteria-api.rst:497
#: ../../criteria-api.rst:897
#: 9f956a6264ba495e9e91ca45f19578d4
#: b53cf8f34b5d4dbc8cbad2c6e8615b44
msgid "le - (<=)"
msgstr ""

#: ../../criteria-api.rst:498
#: ../../criteria-api.rst:898
#: 91b893df8af84455b71f9f4d5cfa2096
#: d907d92d09b84d8db05112d64005d73c
msgid "lt - (<)"
msgstr ""

#: ../../criteria-api.rst:499
#: c46dd20c1a5e4115a2f925fc806704ce
msgid "isNull - (is null)"
msgstr ""

#: ../../criteria-api.rst:500
#: 3b98f37a6f0a4ef389b6c55679d04d12
msgid "isNotNull - (is not null)"
msgstr ""

#: ../../criteria-api.rst:501
#: 563275c139e34a0b83eba1fbad4c0698
msgid "like"
msgstr ""

#: ../../criteria-api.rst:502
#: 11a4a0f564114395a74a388016771eef
msgid "notLike - (not like)"
msgstr ""

#: ../../criteria-api.rst:503
#: 4289714021664bed82f79e379d7608ad
msgid "between"
msgstr ""

#: ../../criteria-api.rst:504
#: 819af15a326b4b3e97507276779be28c
msgid "in"
msgstr ""

#: ../../criteria-api.rst:505
#: ec3216d5defb409ab8317f246835769d
msgid "notIn - (not in)"
msgstr ""

#: ../../criteria-api.rst:506
#: 6c7eb03231e34956ae8cd0e05211b12b
msgid "exists"
msgstr ""

#: ../../criteria-api.rst:507
#: 4181b858a53e428fb8628d55a0a024a8
msgid "notExists - (not exists)"
msgstr ""

#: ../../criteria-api.rst:511
#: 2e0359132dd94a159ceb25c6a05357ca
msgid "If the right hand operand is ``null``, the WHERE or the HAVING clause doesn't include the operator. See WhereDeclaration_ and HavingDeclaration_ javadoc for more details."
msgstr "右側のオペランドが ``null`` の場合、WHERE 句または HAVING 句には演算子が含まれません。詳細については、 WhereDeclaration_ および HavingDeclaration_ の javadoc を参照してください。"

#: ../../criteria-api.rst:517
#: 7c7fe8db26934ae4b765acc946e71115
msgid "We also support the following utility operators:"
msgstr "次のユーティリティ演算子もサポートしています。"

#: ../../criteria-api.rst:519
#: 26ee1930cb81418e937f6326acad4429
msgid "eqOrIsNull - (\"=\" or \"is null\")"
msgstr ""

#: ../../criteria-api.rst:520
#: da668b75c7394933aaff8c9b73750470
msgid "neOrIsNotNull - (\"<>\" or \"is not null\")"
msgstr ""

#: ../../criteria-api.rst:522
#: ../../criteria-api.rst:900
#: a01b9254df714ac695f1979474803e84
#: 1ff3b6989ee7401586f314791fee1ad1
msgid "We also support the following logical operators:"
msgstr "次の論理演算子もサポートしています。"

#: ../../criteria-api.rst:524
#: ../../criteria-api.rst:902
#: 4245d85b5ca849be9840396c5693683c
#: 1319c18959cb4c159f5f63d29ddd2c50
msgid "and"
msgstr ""

#: ../../criteria-api.rst:525
#: ../../criteria-api.rst:903
#: 8bf39423008d4fb8a6175ee43ffdab16
#: 92c38f171f6548159a2bbdf7df0a0aea
msgid "or"
msgstr ""

#: ../../criteria-api.rst:526
#: ../../criteria-api.rst:904
#: 3da993847e754586820d2a5a111624ab
#: 5ad8cdf3a9c341528c9ce33d90555f65
msgid "not"
msgstr ""

#: ../../criteria-api.rst:556
#: 9e4752bde7f048aa92b28fb605f04080
msgid "You can write a subquery as follows:"
msgstr "サブクエリは次のように記述できます。"

#: ../../criteria-api.rst:581
#: 08e0e981e4554fc4b2aa0f4165edc07d
msgid "Dynamic where expression (Entityql, NativeSql)"
msgstr "動的 where 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:583
#: f1c7e1c6c3f34a8489d82d5092b5ab30
msgid "A where expression uses only evaluated operators to build a WHERE clause."
msgstr "where 式は、評価された演算子のみを使用して WHERE 句を構築します。"

#: ../../criteria-api.rst:585
#: 80dca780a295493fabab5aee24fc9afe
msgid "When every operators are not evaluated in a where expression, the built statement doesn't have any WHERE clause."
msgstr "where 式ですべての演算子が評価されない場合、構築されたステートメントには WHERE 句が含まれません。"

#: ../../criteria-api.rst:588
#: ../../criteria-api.rst:938
#: d290d161535544eb89983852acc72f03
#: f2590628aee44e5b8be35c875a455731
msgid "As well as, when every operators are not evaluated in a logical operator expression, the built statement doesn't have the logical operator expression."
msgstr "また、すべての演算子が論理演算子の式で評価されない場合、構築されたステートメントには論理演算子の式が含まれません。"

#: ../../criteria-api.rst:591
#: 44d5c630c03a4e05b83398a468463bbc
msgid "For example, suppose that a where expression contains a conditional expression as follows:"
msgstr "たとえば、where 式に次のような条件式が含まれているとします。"

#: ../../criteria-api.rst:609
#: 41cbf175d78e43268bf46d0eee70c23c
msgid "In the case that the ``enableNameCondition`` variable is ``false``, the ``like`` expression is ignored. The above query issues the following SQL statement:"
msgstr "``enableNameCondition`` 変数が ``false`` の場合、``like`` 式は無視されます。上記のクエリは次の SQL ステートメントを発行します。"

#: ../../criteria-api.rst:619
#: 925ee1f8c2ba4f51bde7e6c3c3ad2183
msgid "Join expression"
msgstr "Join 式"

#: ../../criteria-api.rst:621
#: ../../criteria-api.rst:1052
#: 8a9fda7b66a54730bbb4a42568cfdbaa
#: 62e6f9cb0d4849149209e5d5d2c29b96
msgid "We support the following expressions:"
msgstr "次の式がサポートされています。"

#: ../../criteria-api.rst:623
#: 5b34380936bd480fa26884e73564bbc9
msgid "innerJoin - (inner join)"
msgstr "innerJoin - (内部結合)"

#: ../../criteria-api.rst:624
#: 85a66f302e764b8ab902d1e12062cb76
msgid "leftJoin - (left outer join)"
msgstr "leftJoin - (左外部結合)"

#: ../../criteria-api.rst:627
#: 60e14da687a9431d8732048ff0ce0cd4
msgid "innerJoin (Entityql, NativeSql)"
msgstr "innerJoin (Entityql、NativeSql)"

#: ../../criteria-api.rst:647
#: 9b0e97c9108d4c65b50bfe0b44cedcf0
msgid "leftJoin (Entityql, NativeSql)"
msgstr "leftJoin (Entityql、NativeSQL)"

#: ../../criteria-api.rst:669
#: 5bcec01e8e2843cda1d3afe8aab76d59
msgid "association (Entityql)"
msgstr "関連付け (Entityql)"

#: ../../criteria-api.rst:671
#: e65fc98d737f43658da6d179dd8f7040
msgid "You can associate entities with the ``associate`` operation in the Entityql DSL. You have to use the ``associate`` operation with join expression."
msgstr "Entityql DSL の ``associate`` メソッドを使用してエンティティを関連付けることができます。 join 式と一緒に ``associate`` メソッドを使用する必要があります。"

#: ../../criteria-api.rst:703
#: c06d55a988554ac7a367eb85bf7fb883
msgid "You can associate many entities:"
msgstr "多くのエンティティを関連付けることができます。"

#: ../../criteria-api.rst:728
#: 53e59227e4e94774af1f558077d36f58
msgid "association for immutable entities (Entityql)"
msgstr "不変エンティティの関連付け (Entityql)"

#: ../../criteria-api.rst:730
#: 36ff347e16704152a2b2d65b8b9967fb
msgid "You can associate immutable entities with the ``associateWith`` operation in the Entityql DSL. You have to use the ``associateWith`` operation with join expression."
msgstr "不変エンティティを Entityql DSL の ``associateWith`` メソッドに関連付けることができます。 join 式と一緒に ``associateWith`` メソッドを使用する必要があります。"

#: ../../criteria-api.rst:764
#: 0f865068f78d4d0287143c224d428d5c
msgid "Dynamic join expression (Entityql, NativeSql)"
msgstr "動的 join 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:766
#: 8e8d1c9cfdcc479cbcfc7c125c4bb00b
msgid "A join expression uses only evaluated operators to build a JOIN clause."
msgstr "join 式は、評価された演算子のみを使用して JOIN 句を構築します。"

#: ../../criteria-api.rst:768
#: 0f71f9de30e544c9958d267d6ce669d2
msgid "When every operators are not evaluated in a join expression, the built statement doesn't have any JOIN clause."
msgstr "すべての演算子が join 式で評価されない場合、構築されたステートメントには JOIN 句は含まれません。"

#: ../../criteria-api.rst:771
#: ac8d8ebde6094389980f64a04a4e5bd0
msgid "For example, suppose that a join expression contains a conditional expression as follows:"
msgstr "たとえば、 join 式に条件分岐が含まれているとします。"

#: ../../criteria-api.rst:790
#: f7ea3e295971483ea89de8c9be74f43f
msgid "In the case that the ``join`` variable is ``false``, the ``on`` expression is ignored. The above query issues the following SQL statement:"
msgstr "``join`` 変数が ``false`` の場合、``on`` 式は無視されます。上記のクエリは次の SQL ステートメントを発行します。"

#: ../../criteria-api.rst:800
#: 087abe13545745ec88d846d6810a6721
msgid "Dynamic association (Entityql)"
msgstr "動的関連付け (Entityql)"

#: ../../criteria-api.rst:802
#: da2d51af281346e993c0a3569714504d
msgid "When you use the above dynamic join expression, the association must be optional. To do it, pass the result of ``AssociationOption.optional()`` to the associate method:"
msgstr "上記の動的 join 式を使用する場合、関連付けはオプションである必要があります。これを行うには、 ``AssociationOption.optional()`` の結果を関連付けメソッドに渡します。"

#: ../../criteria-api.rst:831
#: 3ae486bd7e5a403a8290216e72ea01f2
msgid "Aggregate Functions (NativeSql)"
msgstr "集約関数 (NativeSql)"

#: ../../criteria-api.rst:833
#: c6d56f5d17a14cdca4e36be8735e1100
msgid "We support the following aggregate functions:"
msgstr "次の集約関数をサポートしています。"

#: ../../criteria-api.rst:835
#: 57608d9a2d7143ff95fa5ec3241facab
msgid "avg(property)"
msgstr ""

#: ../../criteria-api.rst:836
#: 8bc22d1c6f544fc4aefe9f7423cad9e4
msgid "avgAsDouble(property)"
msgstr ""

#: ../../criteria-api.rst:837
#: 6cc66bb4f9ac4164bcef92a8a76ca9d0
msgid "count()"
msgstr ""

#: ../../criteria-api.rst:838
#: 9a600b5811aa44d1a21e66c0c7d1189c
msgid "count(property)"
msgstr ""

#: ../../criteria-api.rst:839
#: 511f1ca1524e4e2b9385293ba0625426
msgid "countDistinct(property)"
msgstr ""

#: ../../criteria-api.rst:840
#: 1b67bcacdddf4a8286c673bddf9d0347
msgid "max(property)"
msgstr ""

#: ../../criteria-api.rst:841
#: 165544fa1e604749980974137bf84ffb
msgid "min(property)"
msgstr ""

#: ../../criteria-api.rst:842
#: fa8d1b96c129403faddd1cdb262d5e39
msgid "sum(property)"
msgstr ""

#: ../../criteria-api.rst:844
#: f0bf1fbae9fd4d6186e00f5fbbb7588a
msgid "These are defined in the ``org.seasar.doma.jdbc.criteria.expression.Expressions`` class. Use them with static import."
msgstr "これらは ``org.seasar.doma.jdbc.criteria.expression.Expressions`` クラスで定義されています。静的インポートで使用します。"

#: ../../criteria-api.rst:847
#: c0f02c8cb3894029bfac27f900f4395a
msgid "For example, you can pass the ``sum`` function to the select method:"
msgstr "たとえば、 ``sum`` 関数を select メソッドに渡すことができます。"

#: ../../criteria-api.rst:862
#: 7c5e5de5d86e41eca6e19d0123b9fd7f
msgid "Group by expression (NativeSql)"
msgstr "Group by 式 (NativeSql)"

#: ../../criteria-api.rst:877
#: 183ceaa8e92849caa185731f14e9763c
msgid "When you don't specify a group by expression, the expression is inferred from the select expression automatically. So the following code issue the same SQL statement above:"
msgstr "group by 式を指定しない場合、group by 式は select 式から自動的に推測されます。したがって、次のコードは上記と同じ SQL ステートメントを発行します。"

#: ../../criteria-api.rst:889
#: 52faee326c924f2c8f83abdf43add38d
msgid "Having expression (NativeSql)"
msgstr "Having 式(NativeSql)"

#: ../../criteria-api.rst:891
#: 440e3e00ffba4d3fb9e2f7c3a8bd8bb4
msgid "We support the following operators:"
msgstr "次の演算子をサポートしています。"

#: ../../criteria-api.rst:931
#: 0663b07ae5554dc4a15f78328c5f8fbb
msgid "Dynamic having expression (NativeSql)"
msgstr "動的 Having 式 (NativeSql)"

#: ../../criteria-api.rst:933
#: 3daf9064580b41bdbfa09ee3a00c4e7a
msgid "A having expression uses only evaluated operators to build a HAVING clause."
msgstr "having 式では、評価された演算子のみを使用して HAVING 句を構築します。"

#: ../../criteria-api.rst:935
#: 770db0d2451e450b91272b299c2d915b
msgid "When every operators are not evaluated in a having expression, the built statement doesn't have any HAVING clause."
msgstr "having 式ですべての演算子が評価されない場合、構築されたステートメントには HAVING 句は含まれません。"

#: ../../criteria-api.rst:942
#: 3d94a13f4a2545fdbdacf706a39be1ad
msgid "Order by expression (Entityql, NativeSql)"
msgstr "Order by 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:944
#: de6739fa4f1941aeaa781ae6c971e56c
msgid "We support the following order operations:"
msgstr "次のソート操作をサポートしています。"

#: ../../criteria-api.rst:946
#: 74eaf701af4b461b924cd8502c0d3467
msgid "asc"
msgstr ""

#: ../../criteria-api.rst:947
#: 08e6f930e64b46cab4bb5a0d07a1b326
msgid "desc"
msgstr "\n"

#: ../../criteria-api.rst:973
#: 43f2fcbbbea34df1b0398c4fc3cd6c2b
msgid "Dynamic order by expression (NativeSql)"
msgstr "動的 Order by 式 (NativeSql)"

#: ../../criteria-api.rst:975
#: 6794694eb8f546299914bf5854aa0efd
msgid "An order by expression uses only evaluated operators to build an ORDER BY clause."
msgstr "order by 式では、評価された演算子のみを使用して ORDER BY 句を作成します。"

#: ../../criteria-api.rst:977
#: da51b954ad974b5c851c1d4631c2080f
msgid "When every operators are not evaluated in a order by expression, the built statement doesn't have any ORDER BY clause."
msgstr "すべての演算子が order by 式で評価されない場合、構築されたステートメントには ORDER BY 句は含まれません。"

#: ../../criteria-api.rst:981
#: c5241f771af14bd48a43efd75430fa0b
msgid "Distinct expression (Entityql, NativeSql)"
msgstr "Distinct 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1002
#: 13ba5cb8bb834dac9d519e625f6a6d31
msgid "Limit and Offset expression (Entityql, NativeSql)"
msgstr "Limit および offset 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1022
#: e93ecb6e1dbe4fafacfbfad4f63d101c
msgid "Dynamic Limit and Offset expression (Entityql, NativeSql)"
msgstr "動的な limit および offset 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1024
#: 880c9d8628464e7897996f5f0d8c7bdc
msgid "A limit expressions uses only non-null value to build a FETCH FIRST clause. When the value is null ,the built statement doesn't have any FETCH FIRST clause."
msgstr "limit 式では、null 以外の値のみを使用して FETCH FIRST 句を構築します。値が null の場合、構築されたステートメントには FETCH FIRST 句がありません。"

#: ../../criteria-api.rst:1027
#: 3236f3790b374041b2de10ded735a543
msgid "As well as, an offset expressions uses only non-null value to build a OFFSET clause. When the value is null ,the built statement doesn't have any OFFSET clause."
msgstr "また、offset 式では、OFFSET 句を構築するために null 以外の値のみが使用されます。値が null の場合、構築されたステートメントには OFFSET 句がありません。"

#: ../../criteria-api.rst:1031
#: ccbdcf9cf4bc49df92e7ae19e3abb749
msgid "For Update expression (Entityql, NativeSql)"
msgstr " For update 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1050
#: 0f8ef222ac8a4448845e74a3d81f707a
msgid "Union expression (NativeSql)"
msgstr "Union 式（NativeSql）"

#: ../../criteria-api.rst:1054
#: f39859ff730943dcb8f24cd1b8302769
msgid "union"
msgstr ""

#: ../../criteria-api.rst:1055
#: 41f01417edae476d81cc3b8c7e92fa4e
msgid "unionAll - (union all)"
msgstr ""

#: ../../criteria-api.rst:1078
#: c332f48d0d7e42709491ef5cab8ac138
msgid "The order by expression with index is supported:"
msgstr "インデックスを使用した式による順序付けがサポートされています。"

#: ../../criteria-api.rst:1095
#: 098dd223006c4c4c9ee19726194c2f4f
msgid "Derived Table expression (Entityql, NativeSql)"
msgstr "派生テーブル式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1097
#: fbb1c3ce865c45faa49cf1ea96bd74f4
msgid "We support subqueries using derived tables. However, an entity class corresponding to the derived table is required."
msgstr "派生テーブルを使用したサブクエリをサポートします。ただし、派生テーブルに対応するエンティティクラスが必要です。"

#: ../../criteria-api.rst:1100
#: 754fdf54f52947668ba69a33d1e77d9a
msgid "Define the entity class corresponding to the derived table as follows:"
msgstr "派生テーブルに対応するエンティティ クラスを次のように定義します。"

#: ../../criteria-api.rst:1147
#: 407b580289064122862724b51f41eccc
msgid "A subquery using a derived table can be written as follows."
msgstr "派生テーブルを使用したサブクエリは次のように記述できます。"

#: ../../criteria-api.rst:1188
#: 25925038fd354ce78ede08246c54fec7
msgid "Delete statement"
msgstr "Delete ステートメント"

#: ../../criteria-api.rst:1190
#: 8b94f5b41ed346a79b670a91fc542360
msgid "For the specification of the where expression, see :ref:`criteria_where`. The same rule is applied to delete statements."
msgstr "where 式の仕様については、:ref:`criteria_where` を参照してください。同じルールがステートメントの削除にも適用されます。"

#: ../../criteria-api.rst:1194
#: cc6c25b41f074a35876d1abbc695e725
msgid "Delete settings (Entityql, NativeSql)"
msgstr "Delete 設定（Entityql、NativeSql）"

#: ../../criteria-api.rst:1199
#: ../../criteria-api.rst:1287
#: ../../criteria-api.rst:1432
#: ef0b95792de443c7a4a38111f754a01b
#: a67026a72d6a46aca7fe0417d6d2716e
#: 7c96d80dc67c4417b6a08a4ca47fc7d7
msgid "batchSize"
msgstr ""

#: ../../criteria-api.rst:1201
#: ../../criteria-api.rst:1434
#: c489fa494c324b0fb5340b842f385938
#: 07b1308c34864d778902ec4ba8eed683
msgid "ignoreVersion"
msgstr "ignoreVersion"

#: ../../criteria-api.rst:1204
#: ../../criteria-api.rst:1437
#: e6e8f0fe5f4d4f4991d969bf9cf236d4
#: cf1ddeffe6c540f6bb7a6967dc3b64b7
msgid "suppressOptimisticLockException"
msgstr "suppressOptimisticLockException"

#: ../../criteria-api.rst:1206
#: ../../criteria-api.rst:1293
#: ../../criteria-api.rst:1442
#: 6bea9076583c4be38099bfde7b904e5c
#: 9794d1b7fa13444f89faa2513d0dc62e
#: 637b8abb959647f6a76d8d53eb5a175c
msgid "They are all optional."
msgstr "これらはすべてオプションです。"

#: ../../criteria-api.rst:1208
#: ../../criteria-api.rst:1295
#: ../../criteria-api.rst:1444
#: f09a571eb24946d38362c73e10dd1e3a
#: 9cccea6831aa4dee879a1bae3520499f
#: 5b95e1fc2244452a870f4881e4c677ba
msgid "You can apply them as follows:"
msgstr "それらは次のように適用できます。"

#: ../../criteria-api.rst:1226
#: ce9ddced486d47f98a21c22d6a6002eb
msgid "If you want to build a delete statement without a WHERE clause, you have to enable the `allowEmptyWhere` setting."
msgstr "WHERE 句のない削除ステートメントを構築したい場合は、`allowEmptyWhere` 設定を有効にする必要があります。"

#: ../../criteria-api.rst:1230
#: da9342231003491bbc1324fd20265d18
msgid "Delete statement (Entityql)"
msgstr "Delete ステートメント (Entityql)"

#: ../../criteria-api.rst:1246
#: 8061758b371845b58cf517349edb3baf
msgid "Batch Delete is also supported:"
msgstr "バッチ削除もサポートされています。"

#: ../../criteria-api.rst:1257
#: ../../criteria-api.rst:1364
#: ../../criteria-api.rst:1395
#: ../../criteria-api.rst:1510
#: ../../criteria-api.rst:1540
#: 5cba7222ed174193a9b6826790bb7b50
#: fc1b4a43132f4653b9cd1e39ea30043b
#: c1f7d53e0be14635a6df19c5f4884288
#: 8636db4bb9ec4b56b1b0c3295346475e
#: 398eb669d87a4bf1a71b8af69a34e380
msgid "The execute method may throw following exceptions:"
msgstr "実行メソッドは次の例外をスローする場合があります。"

#: ../../criteria-api.rst:1259
#: ../../criteria-api.rst:1512
#: e0044f77d9d743c3a2a6253c515bd68e
#: dcf7ce05bbe74d5292b3291299c0a6df
msgid "OptimisticLockException: if the entity has a version property and an update count is 0"
msgstr "OptimisticLockException: エンティティにバージョン プロパティがあり、更新件数が 0 の場合"

#: ../../criteria-api.rst:1262
#: 161ad790e635447f82606afc2a364988
msgid "Delete statement (NativeSql)"
msgstr "Delete ステートメント (NativeSql)"

#: ../../criteria-api.rst:1277
#: b3f50c8873414b5a8dd7a8f3d24a5823
msgid "Insert statement"
msgstr "Insert ステートメント"

#: ../../criteria-api.rst:1280
#: 754608958cab46e9bdfc286fb4cb740a
msgid "Insert settings (Entityql, NativeSql)"
msgstr "Insert 設定 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1288
#: ../../criteria-api.rst:1438
#: f0c3640083f64a12876076906785cbfe
#: 081e018770684dffaace8fcfc7f388a6
msgid "excludeNull"
msgstr ""

#: ../../criteria-api.rst:1289
#: ../../criteria-api.rst:1439
#: cad70c4bd72848a69d367d5de663c817
#: 0491b7235bfe4fb6a3d0becd03950dcd
msgid "include"
msgstr ""

#: ../../criteria-api.rst:1290
#: ../../criteria-api.rst:1440
#: 684d84a36d2a4107bc5f7c4fd296d45b
#: 4cb7663c9e354eefad386836816ac4be
msgid "exclude"
msgstr ""

#: ../../criteria-api.rst:1291
#: 59cb5f59b5c94aacbe236132a28a2cc2
msgid "ignoreGeneratedKeys"
msgstr ""

#: ../../criteria-api.rst:1331
#: a78b345d714445a1a9bd8629d80ddebc
msgid "Insert statement (Entityql)"
msgstr "Insert ステートメント (Entityql)"

#: ../../criteria-api.rst:1352
#: b422cacb537d4f7caf786e3dfd595495
msgid "Batch Insert is also supported:"
msgstr "バッチ追加もサポートされています。"

#: ../../criteria-api.rst:1366
#: ../../criteria-api.rst:1397
#: ../../criteria-api.rst:1513
#: ../../criteria-api.rst:1542
#: 9ee3c9ea1daa49ba9ae1e92f2ac0e639
#: 589e6e66bb3a420790877f7e229b1b49
#: 527a415452674d12a9978ea614db4e26
#: 445aeca917614dbfa685ec74f3f72bbb
msgid "UniqueConstraintException: if an unique constraint is violated"
msgstr "UniqueConstraintException: 一意制約に違反した場合"

#: ../../criteria-api.rst:1369
#: e3f98c248cf945539d389825f6ec06eb
msgid "Insert statement (NativeSql)"
msgstr "Insert ステートメント (NativeSql)"

#: ../../criteria-api.rst:1399
#: 8aac0018da1e44eb933650aa89ec406c
msgid "We also support the INSERT SELECT syntax as follows:"
msgstr "次のような INSERT SELECT 構文もサポートされています。"

#: ../../criteria-api.rst:1421
#: 0782729dddd4416c860e50df3f3452b9
msgid "Update statement"
msgstr "Update ステートメント"

#: ../../criteria-api.rst:1423
#: 6bab6b9d26f247ff80a914d72dc4bdd7
msgid "For the specification of the where expression, see :ref:`criteria_where`. The same rule is applied to update statements."
msgstr "where 式の仕様については、:ref:`criteria_where` を参照してください。同じルールが更新ステートメントにも適用されます。"

#: ../../criteria-api.rst:1427
#: 6aaf87434a5d44d7a0af927374fa26d7
msgid "Update settings (Entityql, NativeSql)"
msgstr "Update 設定 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1475
#: 57090df84cfb441e922838114186753e
msgid "If you want to build a update statement without a WHERE clause, you have to enable the `allowEmptyWhere` setting."
msgstr "WHERE 句のない update ステートメントを構築したい場合は、`allowEmptyWhere` 設定を有効にする必要があります。"

#: ../../criteria-api.rst:1479
#: 0ff063398a9d40f1b90b021eddfbba13
msgid "Update statement (Entityql)"
msgstr "Update ステートメント (Entityql)"

#: ../../criteria-api.rst:1498
#: b7cbffb1c771493c8d788002f40d521e
msgid "Batch Update is also supported:"
msgstr "バッチ更新もサポートされています。"

#: ../../criteria-api.rst:1516
#: 039894a25932429091d550856b25c7d6
msgid "Update statement (NativeSql)"
msgstr "Update ステートメント (NativeSql)"

#: ../../criteria-api.rst:1545
#: ba03eee69a2742c180ebb5eb28f0ceea
msgid "Property expressions (Entityql, NativeSql)"
msgstr "プロパティ式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1547
#: 10639108c69147e490247da806dcddb0
msgid "All expression methods are defined in the ``org.seasar.doma.jdbc.criteria.expression.Expressions`` class."
msgstr "すべての式メソッドは ``org.seasar.doma.jdbc.criteria.expression.Expressions`` クラスで定義されています。"

#: ../../criteria-api.rst:1550
#: 3598614b76ca478893c3da8d7fc0fed9
msgid "Use them with static import."
msgstr "静的インポートで使用します。"

#: ../../criteria-api.rst:1553
#: d656a03f4fa7432292a152bb0dd3ba5d
msgid "Arithmetic expressions"
msgstr "算術式"

#: ../../criteria-api.rst:1555
#: cc927fc2a3ef42ae9c2836db5363ef23
msgid "We provide the following methods:"
msgstr "次の方法を提供します。"

#: ../../criteria-api.rst:1557
#: fa2f353905d4493888c14d0bc21f4bf9
msgid "add - (+)"
msgstr ""

#: ../../criteria-api.rst:1558
#: 32fbddf21dc345248165bdd35825a525
msgid "sub - (-)"
msgstr ""

#: ../../criteria-api.rst:1559
#: eeb0cecedd054bd989913cb91438ff1f
msgid "mul - (*)"
msgstr ""

#: ../../criteria-api.rst:1560
#: a9c0cce9188a4e6ca261960e4bb362eb
msgid "div - (/)"
msgstr ""

#: ../../criteria-api.rst:1561
#: e79175b509664035b2a4a49cc1382fde
msgid "mod - (%)"
msgstr ""

#: ../../criteria-api.rst:1563
#: f1fb5c59e274444e86e02b39ff611c26
msgid "You can use the ``add`` method as follows:"
msgstr "次のように ``add`` メソッドを使用できます。"

#: ../../criteria-api.rst:1585
#: 951ad034d3e444ffae40a524d161c44f
msgid "String functions"
msgstr "文字列関数"

#: ../../criteria-api.rst:1587
#: ../../criteria-api.rst:1620
#: 93da0fd2f4d34272b9809db72a715dd9
#: 44e09b53a85c4097bf8d079e16ee0b4f
msgid "We provide the following method:"
msgstr "以下の方法を提供します。"

#: ../../criteria-api.rst:1589
#: 53744e0278e544668810360845eb92da
msgid "concat"
msgstr ""

#: ../../criteria-api.rst:1590
#: 1251679a70664e3fa5d0f32dc5488e9c
msgid "lower"
msgstr ""

#: ../../criteria-api.rst:1591
#: d7f36fc12f64447e98768f6da264d8c5
msgid "upper"
msgstr ""

#: ../../criteria-api.rst:1592
#: ddd16d1991d1459f8790d9faec5d088b
msgid "trim"
msgstr ""

#: ../../criteria-api.rst:1593
#: c03096567d574f16920d38420a4df5b4
msgid "ltrim"
msgstr ""

#: ../../criteria-api.rst:1594
#: e34108c0148e4bc39623d1200ea83d41
msgid "rtrim"
msgstr ""

#: ../../criteria-api.rst:1596
#: 2592efa3dc3a45b2a29de0c7d3c3072e
msgid "You can use the ``concat`` method as follows:"
msgstr "次のように ``concat`` メソッドを使用できます。"

#: ../../criteria-api.rst:1618
#: f913ba1141d54d3992b35f8d4a59bc9f
msgid "Literal expression"
msgstr "リテラル表現"

#: ../../criteria-api.rst:1622
#: 7b83103855c9450591a90860d67381f3
msgid "literal (for all basic data types)"
msgstr ""

#: ../../criteria-api.rst:1624
#: 15c3f9a509a14a5a851b52c42d99dbd9
msgid "You can use the ``literal`` method as follows:"
msgstr "次のように ``literal`` メソッドを使用できます。"

#: ../../criteria-api.rst:1641
#: 69fdec4f24a447b18e22ba665325b13c
msgid "Note that the literal expressions are not recognized as bind variables."
msgstr "リテラル式はバインド変数として認識されないことに注意してください。"

#: ../../criteria-api.rst:1644
#: c1df8c0bd12547b6bf760a4860d1c833
msgid "Case expression"
msgstr "Case 式"

#: ../../criteria-api.rst:1646
#: ../../criteria-api.rst:1681
#: 1cf586afdc5943638596ee799311838b
#: cf7133ae577c44f88015ad1d19e903dd
msgid "We support the following method:"
msgstr "次の方法をサポートしています。"

#: ../../criteria-api.rst:1648
#: 1162ffc7d44d4960835e0d0eea3b83fc
msgid "when"
msgstr ""

#: ../../criteria-api.rst:1650
#: c95b3fa38f0e40539f02f55cff04fad6
msgid "You can use the ``when`` method as follows:"
msgstr "次のように ``when`` メソッドを使用できます。"

#: ../../criteria-api.rst:1679
#: b72839956c44433ba7510c6099fa37b2
msgid "Subquery select expression"
msgstr "サブクエリ select 式"

#: ../../criteria-api.rst:1683
#: b6b0cc94046a4996a7d4150530242418
msgid "select"
msgstr ""

#: ../../criteria-api.rst:1685
#: 40dedcdefbf240b38ce38e267d10207f
msgid "You can use the ``select`` method as follows:"
msgstr "次のように ``select`` メソッドを使用できます。"

#: ../../criteria-api.rst:1725
#: ff28ec3414314e6dab5f7b21b6a2ab73
msgid "Scopes (Entityql, NativeSql)"
msgstr "スコープ (Entityql、NativeSQL)"

#: ../../criteria-api.rst:1727
#: f8e1e7e68c504a45bcc7fb756b982c8f
msgid "Scoping allow you to specify commonly-used query conditions."
msgstr "スコープを使用すると、一般的に使用されるクエリ条件を指定できます。"

#: ../../criteria-api.rst:1729
#: 4436cce69a28451e81f6c52f08fd0aa4
msgid "To define a simple scope, create the class which has a method annotated with ``@Scope``:"
msgstr "単純なスコープを定義するには、 ``@Scope`` アノテーションが付けられたメソッドを持つクラスを作成します。"

#: ../../criteria-api.rst:1741
#: 8c0c34426561431caff48f48da7ea75a
msgid "To enable the scope, specify the above class in the scopes element of ``@Metamodel``:"
msgstr "スコープを有効にするには、 ``@Metamodel`` のscopes 要素に上記のクラスを指定します。"

#: ../../criteria-api.rst:1749
#: 34ed87b7f3e64344bf9b34dd77c1d8df
msgid "Now the metamodel ``Department_`` has a ``onlyTokyo`` method. You can use it as follows:"
msgstr "上述の設定によりメタモデル ``Department_`` には ``onlyTokyo`` メソッドが生成されます。次のように使用できます。"

#: ../../criteria-api.rst:1765
#: 8bc06d2386924828b50b03d99487d969
msgid "When you want to combine other query conditions with scopes, compose them using the `andThen` method:"
msgstr "他のクエリ条件をスコープと組み合わせたい場合は、 `andThen` メソッドを使用して条件を作成します。"

#: ../../criteria-api.rst:1774
#: f4e809e0f6cf480fa163e7dd449a3640
msgid "You can define several scopes in a class as follows:"
msgstr "次のように、クラス内に複数のスコープを定義できます。"

#: ../../criteria-api.rst:1796
#: fcd383ed670943139ddde29ad70f6265
msgid "Tips"
msgstr "ちょっとした便利機能"

#: ../../criteria-api.rst:1799
#: cc9fac62ea044d56a6678f9dc1305c35
msgid "Execution in Dao (Entityql, NativeSql)"
msgstr "DAOでの実行（Entityql、NativeSql）"

#: ../../criteria-api.rst:1801
#: 326e7a6f3083426b956079b16757f6bb
msgid "It is useful to execute DSLs in the default method of the Dao interface. To get a ``config`` object, call ``Config.get(this)`` in the default method as follows:"
msgstr "DAO インターフェースのデフォルトのメソッドで DSL を実行すると便利です。 ``config`` オブジェクトを取得するには、次のようにデフォルトのメソッドで ``Config.get(this)`` を呼び出します。"

#: ../../criteria-api.rst:1818
#: 443e02564e314e82b706cc9eb99b5d5e
msgid "Overwriting the table name (Entityql, NativeSql)"
msgstr "テーブル名の上書き（Entityql、NativeSql）"

#: ../../criteria-api.rst:1820
#: 32427d2b5f5d414bae6f550cf53ce9f7
msgid "A metamodel constructor accepts the qualified table name and the metamodel overwrites its table name."
msgstr "メタモデル コンストラクターは修飾されたテーブル名を受け入れ、メタモデルはそのテーブル名を上書きします。"

#: ../../criteria-api.rst:1823
#: b7385336fe4f42779a856959cfb9b1b8
msgid "It is useful to handle two tables that have the same data structure:"
msgstr "同じデータ構造を持つ 2 つのテーブルを処理すると便利です。"

#: ../../criteria-api.rst:1843
#: 1acb861004b24b1bac613f8999ba5415
msgid "Debugging (Entityql, NativeSql)"
msgstr "デバッグ (Entityql、NativeSql)"

#: ../../criteria-api.rst:1845
#: a24bb60bb4dd48ef9b1d8bc6de5f31cf
msgid "To know the SQL statement built by the DSLs, use the ``asSql`` method:"
msgstr "DSL によって構築された SQL ステートメントを知るには、 ``asSql`` メソッドを使用します。"

#: ../../criteria-api.rst:1857
#: ../../criteria-api.rst:1884
#: 330c16742d5f4005b452abf05c5f5d7a
#: 1563e49b9f974071b6582578f22adaa0
msgid "The above code prints as follows:"
msgstr "上記のコードは次のように出力されます。"

#: ../../criteria-api.rst:1864
#: 47946c5f9b34470d914e8b498f40f1ce
msgid "The ``asSql`` method doesn't issue the SQL statement to your Database. It only builds the SQL statement and return it as an ``Sql`` object."
msgstr "``asSql`` メソッドはデータベースに SQL ステートメントを発行しません。 SQL ステートメントを構築し、それを ``Sql`` オブジェクトとして返すだけです。"

#: ../../criteria-api.rst:1867
#: 350359c623194a9aa321cab1d9076f44
msgid "You can also get the ``Sql`` object by calling the ``peek`` method."
msgstr "``peek`` メソッドを呼び出して ``Sql`` オブジェクトを取得することもできます。"

#: ../../criteria-api.rst:1894
#: 772d2004be5946a7a9d33f08d270e440
msgid "Sample projects"
msgstr "サンプルプロジェクト"

#: ../../criteria-api.rst:1896
#: 4861df24387741ba8f647bea916e2f47
msgid "`simple-examples <https://github.com/domaframework/simple-examples>`_"
msgstr ""

#: ../../criteria-api.rst:1897
#: 9c6b9c4c453b47ebafaff32e3cbf3f9b
msgid "`kotlin-sample <https://github.com/domaframework/kotlin-sample>`_"
msgstr ""


msgid ""
msgstr ""
"Project-Id-Version: doma-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-17 05:50+0000\n"
"PO-Revision-Date: 2024-03-17 05:55\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: doma-docs\n"
"X-Crowdin-Project-ID: 657384\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /_build/gettext/criteria-api.pot\n"
"X-Crowdin-File-ID: 184\n"
"Language: ja_JP\n"

#: ../../criteria-api.rst:3
#: e84075665fc84e90988e1a4e453a104e
msgid "Criteria API"
msgstr ""

#: ../../criteria-api.rst:6
#: f405760e049148608459ff2be47134df
msgid "Contents"
msgstr "コンテンツ"

#: ../../criteria-api.rst:9
#: 2bc3482258c44bb8a1343b056a56fb24
msgid "Introduction"
msgstr "イントロダクション"

#: ../../criteria-api.rst:13
#: 326571cabfa847b89131686ec1486312
msgid "In Kotlin environment, use Kotlin specific DSLs instead of the following DSLs. See :ref:`kotlin-specific-criteria-api`."
msgstr "Kotlin 環境では、次の DSL の代わりに Kotlin 固有の DSL を使用できます。 :ref:`kotlin-specific-criteria-api` を参照してください。"

#: ../../criteria-api.rst:16
#: c7b0ec0814dc47dd9e10a8df4ceb0c16
msgid "There are two kinds of DSLs in the Criteria API:"
msgstr "Criteria API には 2 種類の DSL があります。"

#: ../../criteria-api.rst:18
#: 43d4dd193c2e493987b830a767817206
msgid "The Entityql DSL"
msgstr "Entityql DSL"

#: ../../criteria-api.rst:19
#: 959fe42c781a4e46b279da72e083e574
msgid "The NativeSql DSL"
msgstr "NativeSql DSL"

#: ../../criteria-api.rst:21
#: ada2a5c1723a4754bcf7777d75c371fe
msgid "Both requires predefined Entity classes and metamodel classes."
msgstr "どちらも、事前定義されたエンティティクラスとメタモデルクラスを必要とします。"

#: ../../criteria-api.rst:23
#: a8cdb57c27464e71a4d68fa836b5e807
msgid "We use the following Entity classes to show you some examples:"
msgstr "次のエンティティクラスを使用して、いくつかの例を示します。"

#: ../../criteria-api.rst:99
#: 6411721abff7400d8af04a5c0ec135dc
msgid "Note that the above classes are annotated with ``@Entity(metamodel = @Metamodel)``. The ``metamodel = @Metamodel`` indicates that the annotated entity has a corresponding metamodel class generated by Doma's annotation processor ."
msgstr "上記のクラスには ``@Entity(metamodel = @Metamodel)`` というアノテーションが付けられていることに注意してください。 ``metamodel = @Metamodel`` は、エンティティクラスに対応するメタモデルクラスをDoma の アノテーションプロセッサー により生成することを示します。"

#: ../../criteria-api.rst:103
#: 6429be9227b041639dbdb099db1f0390
msgid "In our examples, the metamodel classes are ``Employee_``, ``Department_``, ``Emp_`` and ``Dept_``. These metamodels allow you to make your query typesafe."
msgstr "この例では、メタモデルクラスは ``Employee_``、``Department_``、``Emp_``、および ``Dept_`` です。これらのメタモデルクラスを使用すると、クエリをタイプセーフに構築できます。"

#: ../../criteria-api.rst:106
#: f737de96c3414854a62d8119dbe6a6ec
msgid "You can customize the name of the metamodels by the Metamodel annotation elements."
msgstr "メタモデルの名前は、メタモデルのアノテーション要素によってカスタマイズできます。"

#: ../../criteria-api.rst:108
#: 38198447423e4ed7825e6f70c6348645
msgid "To customize all metamodels in bulk, you can use the annotation processor options. See :doc:`annotation-processing` and check the following options:"
msgstr "すべてのメタモデルを一括でカスタマイズするには、アノテーションプロセッサのオプションを使用できます。 :doc:`annotation-processing` を参照して、次のオプションを確認してください。"

#: ../../criteria-api.rst:111
#: cf1786e6043a43f1a6b566882a2c73cf
msgid "doma.metamodel.enabled"
msgstr ""

#: ../../criteria-api.rst:112
#: edc8d54226854dbea6c5d22e038aa7c5
msgid "doma.metamodel.prefix"
msgstr "doma.metamodel.prefix"

#: ../../criteria-api.rst:113
#: c19a14ed5ee84b8db257366c82d228b3
msgid "doma.metamodel.suffix"
msgstr "doma.metamodel.suffix"

#: ../../criteria-api.rst:116
#: db4284109a834f03b73804dba898c83b
msgid "Entityql DSL"
msgstr ""

#: ../../criteria-api.rst:118
#: 1836bfcde79b4566b9a68d416b646ba8
msgid "The Entityql DSL can query and associate entities. The entry point is the ``org.seasar.doma.jdbc.criteria.Entityql`` class. This class has the following methods:"
msgstr "Entityql DSL は、エンティティをクエリして関連付けることができます。エントリポイントは ``org.seasar.doma.jdbc.criteria.Entityql`` クラスです。このクラスには次のメソッドがあります。"

#: ../../criteria-api.rst:122
#: ../../criteria-api.rst:173
#: 23ac3cd1b9824126b593f0c553b93678
#: c1abcb42c18d48f4923458cda72c12ce
msgid "from"
msgstr ""

#: ../../criteria-api.rst:123
#: ../../criteria-api.rst:175
#: 72a6da62b1e846d7addb4fa62708e9bd
#: 99a9da3ceddf4945a4a18ed43a1b4a9d
msgid "insert"
msgstr "追加"

#: ../../criteria-api.rst:124
#: ../../criteria-api.rst:174
#: 88b669cac8e949f39329f928eb5a8072
#: ed4690a557a6483690bde6b76f8f6601
msgid "delete"
msgstr "削除"

#: ../../criteria-api.rst:125
#: ../../criteria-api.rst:176
#: 69e5b39772a84daf9336cf0b3125af77
#: bf06447a0b044c80b37602073d99c0da
msgid "update"
msgstr "更新"

#: ../../criteria-api.rst:127
#: d5679b6b95a1468eb7c5d9250e2fabe6
msgid "You can instantiate the ``Entityql`` class as follows:"
msgstr "次のように ``Entityql`` クラスをインスタンス化できます。"

#: ../../criteria-api.rst:133
#: 5f080796bb0e4447923728317a615a0a
msgid "For example, to query ``Employee`` and ``Department`` entities and associate them, write as follows:"
msgstr "たとえば、 ``Employee`` エンティティと ``Department`` エンティティをクエリしてそれらを関連付けるには、次のように記述します。"

#: ../../criteria-api.rst:154
#: ../../criteria-api.rst:201
#: ../../criteria-api.rst:358
#: ../../criteria-api.rst:382
#: ../../criteria-api.rst:408
#: ../../criteria-api.rst:433
#: ../../criteria-api.rst:448
#: ../../criteria-api.rst:477
#: ../../criteria-api.rst:547
#: ../../criteria-api.rst:570
#: ../../criteria-api.rst:637
#: ../../criteria-api.rst:657
#: ../../criteria-api.rst:693
#: ../../criteria-api.rst:749
#: ../../criteria-api.rst:855
#: ../../criteria-api.rst:871
#: ../../criteria-api.rst:920
#: ../../criteria-api.rst:963
#: ../../criteria-api.rst:992
#: ../../criteria-api.rst:1011
#: ../../criteria-api.rst:1039
#: ../../criteria-api.rst:1070
#: ../../criteria-api.rst:1165
#: ../../criteria-api.rst:1240
#: ../../criteria-api.rst:1270
#: ../../criteria-api.rst:1345
#: ../../criteria-api.rst:1388
#: ../../criteria-api.rst:1412
#: ../../criteria-api.rst:1491
#: ../../criteria-api.rst:1533
#: ../../criteria-api.rst:1576
#: ../../criteria-api.rst:1609
#: ../../criteria-api.rst:1630
#: ../../criteria-api.rst:1668
#: ../../criteria-api.rst:1711
#: ../../criteria-api.rst:1758
#: dd2681e4cf874045910ce6c550b15e97
#: e6b11ad3f9c54b7f8fb31cdfd44ac6ae
#: 466e2a245f85425b981ce7c7e48d4c2a
#: 4f28889a1bfd440d93996752eb855588
#: 881d302deb434c3c8d016640296943e5
#: 1934dc0851474fd7a3b98f5186cebb0e
#: 5a6abe7dbc46461cb539df7f7f5646bd
#: 56118f9154f9401b8aea04da8422a1d7
#: 288da1f2692a4bfd921c43247f73584c
#: ed04755ec7a949bf9f6a592d8bf6a60e
#: b8dce6f8a48148658438d13bd871d604
#: f35358277cf943c186ff21bce5ab6151
#: fed6376657d5499f9cb4acba0d6dd5a6
#: 19d63cc4c59841729e69db83eebd61fb
#: 8aa665917113463aaaa4ee79eccd51b8
#: c37a8abfb87440178e7e2a3a883d67cb
#: 56b014147b6e4f399df9e89c32b29b50
#: c820f442dfe84dcdb522520455052bb6
#: 0e82f92d551c44f39d8416cda3d4265f
#: d9644ad97e7b4cff9351ccfd60791757
#: 1032184aabc24a929d86747a229c8918
#: 9016afeb632c4b70a960051fd0580c19
#: cb7cb1833dfa43629dac5b3e4ca7bef9
#: 356ddd26232548aea5a565f50aaeeb59
#: 64dd17cb84d744259b0dfd533bc2702d
#: 181135745d1346dfbf877ec6f27cccba
#: 321277b573c74e8e8d21105e673a4703
#: cd61e457cb3f408cb167ac57efd0c8ed
#: 29ae9645a01f4a1ca8ad559f29142a69
#: dbed8534e1224214a9d4874eb4a159a7
#: 9f12f3e9399f4f08849c7235baa480a7
#: 3a5f0df7252440b0a57ea953b9390a27
#: 098e1e1296964bb495535f6d1cb12750
#: 5e5c639a06854af2a692d12719f73887
#: fc792967cc5542139344d07ffe75b4c5
#: 94c64ab56dbc41439de598bc51d2ee1a
msgid "The above query issues the following SQL statement:"
msgstr "上記のクエリは次の SQL ステートメントを発行します。"

#: ../../criteria-api.rst:165
#: fccad682ab8346a987b0b2919557c58f
msgid "NativeSql DSL"
msgstr ""

#: ../../criteria-api.rst:167
#: 05d2313f173748cf9399e9bd26265d26
msgid "The NativeSql DSL can issue more complex SQL statements rather than the Entityql DSL. But note that the NativeSql DSL doesn't support to associate entities."
msgstr "NativeSql DSL は、Entityql DSL よりも複雑な SQL ステートメントを発行できます。ただし、NativeSql DSL はエンティティの関連付けをサポートしていないことに注意してください。"

#: ../../criteria-api.rst:170
#: 99e0fec0b04448349a1e821fcf9ca193
msgid "The entry point is the ``org.seasar.doma.jdbc.criteria.NativeSql`` class. This class has the following methods:"
msgstr "エントリポイントは ``org.seasar.doma.jdbc.criteria.NativeSql`` クラスです。このクラスには次のメソッドがあります。"

#: ../../criteria-api.rst:178
#: 9af253e71d0949a0b0af467d9317bc67
msgid "You can instantiate the ``NativeSql`` class as follows:"
msgstr "次のように ``NativeSql`` クラスをインスタンス化できます。"

#: ../../criteria-api.rst:184
#: 711de24546ba429ca5bf91abeed30067
msgid "For example, to query two columns with GROUP BY and HAVING clauses, write as follows:"
msgstr "たとえば、GROUP BY 句と HAVING 句を使用して 2 つの列をクエリするには、次のように記述します。"

#: ../../criteria-api.rst:212
#: 240f279c6bbf4bd380235ee6eb0b914e
msgid "The difference between two DSLs"
msgstr "2 つの DSL の違い"

#: ../../criteria-api.rst:214
#: 456daf39b4714bddb0c06bc1b7fd1aa6
msgid "The biggest difference between two DSLs is that the Entityql DSL removes duplicated data from the fetched results, but the NativeSQL DSL doesn't."
msgstr "2 つの DSL の最大の違いは、Entityql DSL はフェッチされた結果から重複データを削除しますが、NativeSQL DSL は削除しないことです。"

#: ../../criteria-api.rst:217
#: 2f06d590b9604afeb1d8778c3cb430a6
msgid "See the following example:"
msgstr "次の例を参照してください。"

#: ../../criteria-api.rst:235
#: 41e59b7258a04d3f900935142281120f
msgid "Both (1) and (2) issue the same SQL statement as follows:"
msgstr "(1) と (2) は両方とも、次のように同じ SQL ステートメントを発行します。"

#: ../../criteria-api.rst:243
#: aa7b9ffbfa7b49779819b91f61edf7fe
msgid "The ResultSet contains 14 rows, but the Entityql DSL returns only 3 rows because it removes duplicate Department entities. The Entityql DSL uses the id properties to know the uniqueness of the entities."
msgstr "ResultSet には 14 行が含まれていますが、Entityql DSL は重複するDepartment エンティティを削除するため、3 行のみを返します。 Entityql DSL は、id プロパティを使用してエンティティの一意性を認識します。"

#: ../../criteria-api.rst:247
#: 0245a699d617426eafb73df8c72cc1bd
msgid "On the other hand, the NativeSql DSL returns the data as it retrieves from the database. It puts results into entity objects, but it handles them as the plain DTOs."
msgstr "一方、NativeSql DSL は、データベースから取得したデータを返します。結果はエンティティオブジェクトに格納されますが、それらはプレーンな DTO として処理されます。"

#: ../../criteria-api.rst:251
#: 0bbca601797f47b6bd06ebd25f6d6f71
msgid "Select statement"
msgstr "Select ステートメント"

#: ../../criteria-api.rst:254
#: d3936e4e0e304aa7bd7ced9ddcfd9fa6
msgid "Select settings (Entityql, NativeSql)"
msgstr "Select 設定 (Entityql, NativeSql)"

#: ../../criteria-api.rst:256
#: ../../criteria-api.rst:1196
#: ../../criteria-api.rst:1282
#: ../../criteria-api.rst:1429
#: 8406196462034510a46a326e7e9b69d3
#: 7b38cf2768ca439ea8ee2bbef999c494
#: 5b869ec969ec4fcfa58abb7cc3d3351f
#: c644ea1f10b941cebcc3b4494aad64bc
msgid "We support the following settings:"
msgstr "次の設定をサポートしています。"

#: ../../criteria-api.rst:258
#: ../../criteria-api.rst:1198
#: ../../criteria-api.rst:1431
#: 97c18c2306574cf8b8a4a893d234c2d6
#: 4506bfb3f38e4234afdbd98224369ace
#: 096893f5480d48fc89b8ca5bcfbe869a
msgid "allowEmptyWhere"
msgstr ""

#: ../../criteria-api.rst:259
#: ../../criteria-api.rst:1200
#: ../../criteria-api.rst:1284
#: ../../criteria-api.rst:1433
#: 26701adcc13f446a94e6a44c986fa8d8
#: 12e9617a9e24492dad91f81377abd3dc
#: 3324557d89b24c829fb47387dd3df67b
#: 9ca69a1fc53e4d00aea70d6e3c172417
msgid "comment"
msgstr ""

#: ../../criteria-api.rst:260
#: 23e1e602236d49b08defb8dec0d23fe6
msgid "fetchSize"
msgstr ""

#: ../../criteria-api.rst:261
#: 1aaae95998cb4185ace5266b37c3b2b9
msgid "maxRows"
msgstr ""

#: ../../criteria-api.rst:262
#: ../../criteria-api.rst:1202
#: ../../criteria-api.rst:1285
#: ../../criteria-api.rst:1435
#: 8fba3e6b262e47cc9f950728bb379188
#: 32370ad7c22f4bbc9b7bccdfbd779bf9
#: 32f0850de1bd49abb7bb9ad0313326b9
#: 43201e2b68b34623b45671aa3643c997
msgid "queryTimeout"
msgstr ""

#: ../../criteria-api.rst:263
#: ../../criteria-api.rst:1203
#: ../../criteria-api.rst:1286
#: ../../criteria-api.rst:1436
#: 2792665d58c4443bb24045b685cffbd0
#: dae5a5f7df9f4b2da216e24e3a121b55
#: e4ef90cffa9d4db1aa2b22f61f14f372
#: f5e064cdda754a5eae74015474354974
msgid "sqlLogType"
msgstr ""

#: ../../criteria-api.rst:265
#: 59027906d86841d4b3f3ee89f5ca7b25
msgid "They are all optional. You can apply them as follows:"
msgstr "これらはすべてオプションです。それらは次のように適用できます。"

#: ../../criteria-api.rst:282
#: 0919eebc4c6843f4af380116219fac52
msgid "Fetching (Entityql, NativeSql)"
msgstr "フェッチ (Entityql、NativeSql)"

#: ../../criteria-api.rst:284
#: 624028ad79fc4169a266c98133a86083
msgid "Both Entityql DSL and NativeSql DSL support the following methods to fetch data from a database:"
msgstr "Entityql DSL と NativeSql DSL はどちらも、データベースからデータをフェッチする次のメソッドをサポートしています。"

#: ../../criteria-api.rst:286
#: 7d8ea08fec0f46ae904251e1737823fb
msgid "fetch"
msgstr ""

#: ../../criteria-api.rst:287
#: dbc50b274d2041029a48d70aacc7cab4
msgid "fetchOne"
msgstr ""

#: ../../criteria-api.rst:288
#: c2dcd05bb35642c0afa91890cea2d2dc
msgid "fetchOptional"
msgstr ""

#: ../../criteria-api.rst:289
#: 9ab6f66aae764053aa2f666f0d38d6a5
msgid "stream"
msgstr ""

#: ../../criteria-api.rst:313
#: f24d07f78ee74972950852dfc5c1fec3
msgid "Streaming (NativeSql)"
msgstr "ストリーミング (NativeSql)"

#: ../../criteria-api.rst:315
#: 3ceec8f334f349d5ad7e72db5031cb74
msgid "The NativeSql DSL supports the following methods:"
msgstr "NativeSql DSL は次のメソッドをサポートしています。"

#: ../../criteria-api.rst:317
#: de36ffe1e8ca4b1e9721d07211fa0a6f
msgid "mapStream"
msgstr ""

#: ../../criteria-api.rst:318
#: c51e4325974145e2a0af802050c2babc
msgid "collect"
msgstr ""

#: ../../criteria-api.rst:335
#: a1e09adcb6954927a20eeba6dd3186b2
msgid "These methods handle the stream that wraps a JDBC ResultSet. So they are useful to process a large ResultSet effectively."
msgstr "これらのメソッドは、JDBC ResultSet をラップするストリームを処理します。したがって、これらは大規模な ResultSet を効率的に処理するのに役立ちます。"

#: ../../criteria-api.rst:339
#: eb59dd79fc5b4cfba3010666a0325fb1
msgid "Select expression"
msgstr "Select 式"

#: ../../criteria-api.rst:342
#: f8b2378dafb74e11b27652be39bb1186
msgid "Entity selection (Entityql, NativeSql)"
msgstr "エンティティの検索 (Entityql、NativeSql)"

#: ../../criteria-api.rst:344
#: 44667395d423418f817cafd4232b812d
msgid "By default, the result entity type is the same as the one specified at the ``from`` method. See the following code:"
msgstr "デフォルトでは、結果のエンティティタイプは ``from`` メソッドで指定されたものと同じです。次のコードを参照してください。"

#: ../../criteria-api.rst:367
#: 2508804d64714e4c8c2c10808e396b6d
msgid "To choose a joined entity type as the result entity type, call the ``select`` method as follows:"
msgstr "結合されたエンティティの型を結果のエンティティの型として選択するには、次のように ``select`` メソッドを呼び出します。"

#: ../../criteria-api.rst:391
#: f538752bd0e94a2da8aa71584c766349
msgid "Multiple entity selection (NativeSql)"
msgstr "複数のエンティティの検索 (NativeSql)"

#: ../../criteria-api.rst:393
#: 8cefd5d7f86e40dead05168f518de3a0
msgid "You can specify multiple entity types and fetch them as a tuple as follows:"
msgstr "次のように、複数のエンティティの型を指定してタプルとしてフェッチできます。"

#: ../../criteria-api.rst:418
#: 2cf5a1ac7b124bb6bc4e765399eafa8b
msgid "The entity included in the tuple may be null when the all properties of the entity are null."
msgstr "エンティティのすべてのプロパティが null の場合、タプルに含まれるエンティティは null になる可能性があります。"

#: ../../criteria-api.rst:421
#: 51809eabebc244d38f82036d635045bc
msgid "Column projection (NativeSql)"
msgstr "カラムの射影 (NativeSql)"

#: ../../criteria-api.rst:423
#: 22366e6874704f67980a89bad8b850f3
msgid "To project columns, use the ``select`` method:"
msgstr "カラムを射影するには、 ``select`` メソッドを使用します。"

#: ../../criteria-api.rst:425
#: e7735dcf0694446f92ce21c79593b7de
msgid "To project one column, pass one property to the select method as follows:"
msgstr "1 つのカラムを射影するには、次のように 1 つのプロパティを select メソッドに渡します。"

#: ../../criteria-api.rst:439
#: 968b8718a3bb4a07a33e9668e2f5de8b
msgid "To project two or more columns, pass two or more properties to the select method as follows:"
msgstr "2 つ以上のカラムを射影するには、次のように 2 つ以上のプロパティを select メソッドに渡します。"

#: ../../criteria-api.rst:454
#: 6c7104213ada4ac88a7093620e053928
msgid "Up to 9 numbers, the column results are held by ``Tuple2`` to ``Tuple9``. For more than 9 numbers, the results are held by ``Row``."
msgstr "9 個までのカラムの結果は ``Tuple2`` から ``Tuple9`` に保持されます。 9 個を超える数値の場合、結果は ``Row`` によって保持されます。"

#: ../../criteria-api.rst:457
#: e6d78ba19a17477bb05909f674a64fe7
msgid "You can get a ``Row`` list explicitly by using ``selectAsRow`` as follows:"
msgstr "次のように ``selectAsRow`` を使用すると、 ``Row`` リストを明示的に取得できます。"

#: ../../criteria-api.rst:467
#: d9f9238d0e4345ed90eb5d455d882f72
msgid "Column projection and mapping (Entityql, NativeSql)"
msgstr "カラムの射影とマッピング (Entityql、NativeSql)"

#: ../../criteria-api.rst:469
#: af3ce0e5a3c649aaac1b9fa2eb811b05
msgid "To project columns and map them to an entity, use the ``selectTo`` method as follows:"
msgstr "カラムを射影してエンティティにマップするには、次のように ``selectTo`` メソッドを使用します。"

#: ../../criteria-api.rst:483
#: aadc04bf72da464a9009f76ddd94935c
msgid "Note that the select clause of the above SQL statement contains the primary key \"EMPLOYEE_ID\". The ``selectTo`` method always includes the id properties of the entity, even if you don't."
msgstr "上記の SQL ステートメントの SELECT 句には主キー ``EMPLOYEE_ID`` が含まれていることに注意してください。 ``selectTo`` メソッドにエンティティの id プロパティが含まれていない場合でも、SELECT 句には常に主キーが含まれます。"

#: ../../criteria-api.rst:489
#: 87a1f0e324ee40a0bf9d6200ed5eb714
msgid "Where expression (Entityql, NativeSql)"
msgstr "Where 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:491
#: 1c8984d287674cfa9fafc94c1e2a1c67
msgid "We support the following operators and predicates:"
msgstr "次の演算子と述語がサポートされています。"

#: ../../criteria-api.rst:493
#: ../../criteria-api.rst:893
#: 74049ae7afdd4ef8aba9992fac87d799
#: 7f9ec177b31f4fddaa9af559fc35a811
msgid "eq - (=)"
msgstr ""

#: ../../criteria-api.rst:494
#: ../../criteria-api.rst:894
#: 5d51851fb6b54de1b36b8fe703ad6ef4
#: 0a49155958be4d569cbba3a789e8253d
msgid "ne - (<>)"
msgstr ""

#: ../../criteria-api.rst:495
#: ../../criteria-api.rst:895
#: 5fa7011596784578a5486a1ca91eb8f5
#: 1bd6cfc97a534ad6bd021352e3ba4e42
msgid "ge - (>=)"
msgstr ""

#: ../../criteria-api.rst:496
#: ../../criteria-api.rst:896
#: caeb76318b6641e59c6aa3bbff1e7046
#: 630d4cfd10e347519cec5ae586cfe002
msgid "gt - (>)"
msgstr ""

#: ../../criteria-api.rst:497
#: ../../criteria-api.rst:897
#: 16764d6b858e4066af8f03387bd0ec54
#: d313eba8ddcc4183a99b0159b799eddf
msgid "le - (<=)"
msgstr ""

#: ../../criteria-api.rst:498
#: ../../criteria-api.rst:898
#: df5819eca5a1444d965bb2b474cbf6c3
#: 59892617b2134ff49bd7131f4efa84c7
msgid "lt - (<)"
msgstr ""

#: ../../criteria-api.rst:499
#: e5d64225a3a94ab0aeab573f89324268
msgid "isNull - (is null)"
msgstr ""

#: ../../criteria-api.rst:500
#: 697308c13a844b78b792a5396b9a0d88
msgid "isNotNull - (is not null)"
msgstr ""

#: ../../criteria-api.rst:501
#: 90d9dce13a414104b393069d298ed3b6
msgid "like"
msgstr ""

#: ../../criteria-api.rst:502
#: 7e080d6d0489435186895adfaf69c653
msgid "notLike - (not like)"
msgstr ""

#: ../../criteria-api.rst:503
#: 0d00a40924414da0abf6ccde38fbb6ac
msgid "between"
msgstr ""

#: ../../criteria-api.rst:504
#: ac20d2b7d1c7476fba2613a11206f56c
msgid "in"
msgstr ""

#: ../../criteria-api.rst:505
#: 448090e424bc40859bdda8d46638340a
msgid "notIn - (not in)"
msgstr ""

#: ../../criteria-api.rst:506
#: 8f43c537c00c4d52947990863e704ab1
msgid "exists"
msgstr ""

#: ../../criteria-api.rst:507
#: 74b56ab193734fcbb34a55b214c1c9ed
msgid "notExists - (not exists)"
msgstr ""

#: ../../criteria-api.rst:511
#: a0f00a13eb85455aa88deedf2a1d841e
msgid "If the right hand operand is ``null``, the WHERE or the HAVING clause doesn't include the operator. See WhereDeclaration_ and HavingDeclaration_ javadoc for more details."
msgstr "右側のオペランドが ``null`` の場合、WHERE 句または HAVING 句には演算子が含まれません。詳細については、 WhereDeclaration_ および HavingDeclaration_ の javadoc を参照してください。"

#: ../../criteria-api.rst:517
#: 94f3ab5e0fd5496e9b1ed4382efbc233
msgid "We also support the following utility operators:"
msgstr "次のユーティリティ演算子もサポートしています。"

#: ../../criteria-api.rst:519
#: 123e617ea7af441387a6793d6049eef1
msgid "eqOrIsNull - (\"=\" or \"is null\")"
msgstr ""

#: ../../criteria-api.rst:520
#: 60e8fb09b6614fcfa065756b12d0769c
msgid "neOrIsNotNull - (\"<>\" or \"is not null\")"
msgstr ""

#: ../../criteria-api.rst:522
#: ../../criteria-api.rst:900
#: b02ca8200b8a4840bdf33a2f5e63e7a3
#: 3ea708ac7df34d71aeb0e37aaad6367a
msgid "We also support the following logical operators:"
msgstr "次の論理演算子もサポートしています。"

#: ../../criteria-api.rst:524
#: ../../criteria-api.rst:902
#: 539c8488ce574f4d9bab10d4f2d081cb
#: 0dc248d353db4e178f72690318b8b0db
msgid "and"
msgstr ""

#: ../../criteria-api.rst:525
#: ../../criteria-api.rst:903
#: db46b8f994a249b2b4f45daa2d55ea9c
#: f573b9f4240c450baef4c1f74b47a881
msgid "or"
msgstr ""

#: ../../criteria-api.rst:526
#: ../../criteria-api.rst:904
#: 134e00fef62f42ea8b85af5e40712292
#: 7d8932311717410b9742afc92ebb4a12
msgid "not"
msgstr ""

#: ../../criteria-api.rst:556
#: f656cebb4eb2444482aec2b87c2d7055
msgid "You can write a subquery as follows:"
msgstr "サブクエリは次のように記述できます。"

#: ../../criteria-api.rst:581
#: a3eba0ceb45f4fb1b229898bae021cad
msgid "Dynamic where expression (Entityql, NativeSql)"
msgstr "動的 where 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:583
#: c10cc0f32904491ab4c6403d9a971e3c
msgid "A where expression uses only evaluated operators to build a WHERE clause."
msgstr "where 式は、評価された演算子のみを使用して WHERE 句を構築します。"

#: ../../criteria-api.rst:585
#: a99c0b464a624cba9de691427402cbc7
msgid "When every operators are not evaluated in a where expression, the built statement doesn't have any WHERE clause."
msgstr "where 式ですべての演算子が評価されない場合、構築されたステートメントには WHERE 句が含まれません。"

#: ../../criteria-api.rst:588
#: ../../criteria-api.rst:938
#: c4986454c67f474fa502954a17f4571f
#: f6a31d6f5d9b4c85a335e30e9f00d2e3
msgid "As well as, when every operators are not evaluated in a logical operator expression, the built statement doesn't have the logical operator expression."
msgstr "また、すべての演算子が論理演算子の式で評価されない場合、構築されたステートメントには論理演算子の式が含まれません。"

#: ../../criteria-api.rst:591
#: 55130c0539144c46abcc4d06868a4dbd
msgid "For example, suppose that a where expression contains a conditional expression as follows:"
msgstr "たとえば、where 式に次のような条件式が含まれているとします。"

#: ../../criteria-api.rst:609
#: 0f5b380ff75242d4bf24a0b85f1f1d0e
msgid "In the case that the ``enableNameCondition`` variable is ``false``, the ``like`` expression is ignored. The above query issues the following SQL statement:"
msgstr "``enableNameCondition`` 変数が ``false`` の場合、``like`` 式は無視されます。上記のクエリは次の SQL ステートメントを発行します。"

#: ../../criteria-api.rst:619
#: e6a4f010e0064df1bed22584d9db60c3
msgid "Join expression"
msgstr "Join 式"

#: ../../criteria-api.rst:621
#: ../../criteria-api.rst:1052
#: c29873c9ea6a419ca2794acac4f876bf
#: 905936131c3544ac9ca7953fe4a91fc5
msgid "We support the following expressions:"
msgstr "次の式がサポートされています。"

#: ../../criteria-api.rst:623
#: 77bb5e3342ec4aaeb450e02463271fd4
msgid "innerJoin - (inner join)"
msgstr "innerJoin - (内部結合)"

#: ../../criteria-api.rst:624
#: d0bb7dff4df44607934812b624895d05
msgid "leftJoin - (left outer join)"
msgstr "leftJoin - (左外部結合)"

#: ../../criteria-api.rst:627
#: 3b603bbec777481f80d87a3ad625325a
msgid "innerJoin (Entityql, NativeSql)"
msgstr "innerJoin (Entityql、NativeSql)"

#: ../../criteria-api.rst:647
#: 29f38541ab2b40d5b6a9477fc79ec526
msgid "leftJoin (Entityql, NativeSql)"
msgstr "leftJoin (Entityql、NativeSQL)"

#: ../../criteria-api.rst:669
#: 4516880ead7141299c670b41726acf54
msgid "association (Entityql)"
msgstr "関連付け (Entityql)"

#: ../../criteria-api.rst:671
#: 1207a305880b4b129c8afca6ff3c6e11
msgid "You can associate entities with the ``associate`` operation in the Entityql DSL. You have to use the ``associate`` operation with join expression."
msgstr "Entityql DSL の ``associate`` メソッドを使用してエンティティを関連付けることができます。 join 式と一緒に ``associate`` メソッドを使用する必要があります。"

#: ../../criteria-api.rst:703
#: fd7944851b10460fa16d1ec2f24b1673
msgid "You can associate many entities:"
msgstr "多くのエンティティを関連付けることができます。"

#: ../../criteria-api.rst:728
#: 571747fb2db34d1d9013e33db09ad50f
msgid "association for immutable entities (Entityql)"
msgstr "不変エンティティの関連付け (Entityql)"

#: ../../criteria-api.rst:730
#: 258ab8d987e24ed8b6f66b4c1d902c76
msgid "You can associate immutable entities with the ``associateWith`` operation in the Entityql DSL. You have to use the ``associateWith`` operation with join expression."
msgstr "不変エンティティを Entityql DSL の ``associateWith`` メソッドに関連付けることができます。 join 式と一緒に ``associateWith`` メソッドを使用する必要があります。"

#: ../../criteria-api.rst:764
#: 03ba1738c5214dbb901c23acbf620b7b
msgid "Dynamic join expression (Entityql, NativeSql)"
msgstr "動的 join 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:766
#: 987e060ca4e1491f98626e0ebfdbf91e
msgid "A join expression uses only evaluated operators to build a JOIN clause."
msgstr "join 式は、評価された演算子のみを使用して JOIN 句を構築します。"

#: ../../criteria-api.rst:768
#: 3d84a8df58e94bb19a674a86cbd140b4
msgid "When every operators are not evaluated in a join expression, the built statement doesn't have any JOIN clause."
msgstr "すべての演算子が join 式で評価されない場合、構築されたステートメントには JOIN 句は含まれません。"

#: ../../criteria-api.rst:771
#: b909dcca25634841962f4c0843c15bbe
msgid "For example, suppose that a join expression contains a conditional expression as follows:"
msgstr "たとえば、 join 式に条件分岐が含まれているとします。"

#: ../../criteria-api.rst:790
#: 4fc70650fbef4094b158c1e836a1c456
msgid "In the case that the ``join`` variable is ``false``, the ``on`` expression is ignored. The above query issues the following SQL statement:"
msgstr "``join`` 変数が ``false`` の場合、``on`` 式は無視されます。上記のクエリは次の SQL ステートメントを発行します。"

#: ../../criteria-api.rst:800
#: ea4dde675f7b42858de34383a2c7f56a
msgid "Dynamic association (Entityql)"
msgstr "動的関連付け (Entityql)"

#: ../../criteria-api.rst:802
#: 48f60c3e181a44f388b67ed18dac4982
msgid "When you use the above dynamic join expression, the association must be optional. To do it, pass the result of ``AssociationOption.optional()`` to the associate method:"
msgstr "上記の動的 join 式を使用する場合、関連付けはオプションである必要があります。これを行うには、 ``AssociationOption.optional()`` の結果を関連付けメソッドに渡します。"

#: ../../criteria-api.rst:831
#: 8affa42163c7412ea9d458b2e843db6e
msgid "Aggregate Functions (NativeSql)"
msgstr "集約関数 (NativeSql)"

#: ../../criteria-api.rst:833
#: 8f2824bf70f643baa1511e90db6cdd76
msgid "We support the following aggregate functions:"
msgstr "次の集約関数をサポートしています。"

#: ../../criteria-api.rst:835
#: e03a7a1a6ced4463887e63a22b1677fa
msgid "avg(property)"
msgstr ""

#: ../../criteria-api.rst:836
#: 3e5cf6bc22274ccd979dd4864d563dff
msgid "avgAsDouble(property)"
msgstr ""

#: ../../criteria-api.rst:837
#: 45bab502c5d348ee8c6a416e6ebac4b9
msgid "count()"
msgstr ""

#: ../../criteria-api.rst:838
#: 7f8f96a9782c429889d22f3212d78e05
msgid "count(property)"
msgstr ""

#: ../../criteria-api.rst:839
#: 8acf53251bbe417b83a8f43d01d02c18
msgid "countDistinct(property)"
msgstr ""

#: ../../criteria-api.rst:840
#: 55581d9e7a2a4206ac01af514441f3e6
msgid "max(property)"
msgstr ""

#: ../../criteria-api.rst:841
#: e0692784c08c46d0becb7f337be16ba9
msgid "min(property)"
msgstr ""

#: ../../criteria-api.rst:842
#: 5d37cfa318d94839bd20e25da0517de0
msgid "sum(property)"
msgstr ""

#: ../../criteria-api.rst:844
#: f35f3391c7284b0eb6248fb302583963
msgid "These are defined in the ``org.seasar.doma.jdbc.criteria.expression.Expressions`` class. Use them with static import."
msgstr "これらは ``org.seasar.doma.jdbc.criteria.expression.Expressions`` クラスで定義されています。静的インポートで使用します。"

#: ../../criteria-api.rst:847
#: 60bbcb3508434ea6a14dc92483a7f4d9
msgid "For example, you can pass the ``sum`` function to the select method:"
msgstr "たとえば、 ``sum`` 関数を select メソッドに渡すことができます。"

#: ../../criteria-api.rst:862
#: 942b673c70b847fcac9163b3084b4df5
msgid "Group by expression (NativeSql)"
msgstr "Group by 式 (NativeSql)"

#: ../../criteria-api.rst:877
#: 6f9928eab9c147938086cd0b59bdad5e
msgid "When you don't specify a group by expression, the expression is inferred from the select expression automatically. So the following code issue the same SQL statement above:"
msgstr "group by 式を指定しない場合、group by 式は select 式から自動的に推測されます。したがって、次のコードは上記と同じ SQL ステートメントを発行します。"

#: ../../criteria-api.rst:889
#: c13e1e444305487a8a202ab6c1ed98a6
msgid "Having expression (NativeSql)"
msgstr "Having 式(NativeSql)"

#: ../../criteria-api.rst:891
#: c4817940e2e64d778a0fce06f6aa6690
msgid "We support the following operators:"
msgstr "次の演算子をサポートしています。"

#: ../../criteria-api.rst:931
#: f99c7f45f0614b1c8c73688facca4b43
msgid "Dynamic having expression (NativeSql)"
msgstr "動的 Having 式 (NativeSql)"

#: ../../criteria-api.rst:933
#: cc30eca786204ec18ab94fab8e99aa7e
msgid "A having expression uses only evaluated operators to build a HAVING clause."
msgstr "having 式では、評価された演算子のみを使用して HAVING 句を構築します。"

#: ../../criteria-api.rst:935
#: 78ff9ab739534bf4904e36fcab551052
msgid "When every operators are not evaluated in a having expression, the built statement doesn't have any HAVING clause."
msgstr "having 式ですべての演算子が評価されない場合、構築されたステートメントには HAVING 句は含まれません。"

#: ../../criteria-api.rst:942
#: 90ade2fc071746e1a53f6c03db58ed1c
msgid "Order by expression (Entityql, NativeSql)"
msgstr "Order by 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:944
#: f840653f8e5842909fddaed5521f24b4
msgid "We support the following order operations:"
msgstr "次のソート操作をサポートしています。"

#: ../../criteria-api.rst:946
#: f4de9c284e2e4e45befe72e17ce2d237
msgid "asc"
msgstr ""

#: ../../criteria-api.rst:947
#: 1f708df930e547348c5e50019cdb498e
msgid "desc"
msgstr "\n"

#: ../../criteria-api.rst:973
#: e1a14ecb282d4b2e9dd80cca5133ba44
msgid "Dynamic order by expression (NativeSql)"
msgstr "動的 Order by 式 (NativeSql)"

#: ../../criteria-api.rst:975
#: b1b25d3f9a8648eb8e671c61260ab435
msgid "An order by expression uses only evaluated operators to build an ORDER BY clause."
msgstr "order by 式では、評価された演算子のみを使用して ORDER BY 句を作成します。"

#: ../../criteria-api.rst:977
#: 01877290aa9d4d22be55320892194334
msgid "When every operators are not evaluated in a order by expression, the built statement doesn't have any ORDER BY clause."
msgstr "すべての演算子が order by 式で評価されない場合、構築されたステートメントには ORDER BY 句は含まれません。"

#: ../../criteria-api.rst:981
#: 3372bb4c469040fb96ee650c2daf7e27
msgid "Distinct expression (Entityql, NativeSql)"
msgstr "Distinct 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1002
#: a90912b3efcd4aa39cf6d35dc4127197
msgid "Limit and Offset expression (Entityql, NativeSql)"
msgstr "Limit および offset 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1022
#: bf843989aef44c988ccc29e693a7c22a
msgid "Dynamic Limit and Offset expression (Entityql, NativeSql)"
msgstr "動的な limit および offset 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1024
#: c2257488e68a4cebb6d4e41da178a7bb
msgid "A limit expressions uses only non-null value to build a FETCH FIRST clause. When the value is null ,the built statement doesn't have any FETCH FIRST clause."
msgstr "limit 式では、null 以外の値のみを使用して FETCH FIRST 句を構築します。値が null の場合、構築されたステートメントには FETCH FIRST 句がありません。"

#: ../../criteria-api.rst:1027
#: 472e0e1b678a4006985caf560dfe08df
msgid "As well as, an offset expressions uses only non-null value to build a OFFSET clause. When the value is null ,the built statement doesn't have any OFFSET clause."
msgstr "また、offset 式では、OFFSET 句を構築するために null 以外の値のみが使用されます。値が null の場合、構築されたステートメントには OFFSET 句がありません。"

#: ../../criteria-api.rst:1031
#: c9ebc8394df845399ec53d915a337843
msgid "For Update expression (Entityql, NativeSql)"
msgstr " For update 式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1050
#: f58f704d005847d08335ac07dbdb2854
msgid "Union expression (NativeSql)"
msgstr "Union 式（NativeSql）"

#: ../../criteria-api.rst:1054
#: 27e06274a82e483b838097eef25034ab
msgid "union"
msgstr ""

#: ../../criteria-api.rst:1055
#: 3894bdb56d0647aaa46710658a698e49
msgid "unionAll - (union all)"
msgstr ""

#: ../../criteria-api.rst:1078
#: 981f91b3023b4bed9940fda421846fcf
msgid "The order by expression with index is supported:"
msgstr "インデックスを使用した式による順序付けがサポートされています。"

#: ../../criteria-api.rst:1095
#: d8f51df7ebee4b06a4b8c1e9af005da9
msgid "Derived Table expression (Entityql, NativeSql)"
msgstr "派生テーブル式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1097
#: 859b3bedbfd9400ab48670335b88475a
msgid "We support subqueries using derived tables. However, an entity class corresponding to the derived table is required."
msgstr "派生テーブルを使用したサブクエリをサポートします。ただし、派生テーブルに対応するエンティティクラスが必要です。"

#: ../../criteria-api.rst:1100
#: ddbefc527e3f47bb989830e53baa6d53
msgid "Define the entity class corresponding to the derived table as follows:"
msgstr "派生テーブルに対応するエンティティ クラスを次のように定義します。"

#: ../../criteria-api.rst:1147
#: bbb7711ac31c40cead83236d48ea1afe
msgid "A subquery using a derived table can be written as follows."
msgstr "派生テーブルを使用したサブクエリは次のように記述できます。"

#: ../../criteria-api.rst:1188
#: b3eeef778d5d4d5bb7a77a808c776758
msgid "Delete statement"
msgstr "Delete ステートメント"

#: ../../criteria-api.rst:1190
#: eb9b46f1cc75403aae2274b989d5815b
msgid "For the specification of the where expression, see :ref:`criteria_where`. The same rule is applied to delete statements."
msgstr "where 式の仕様については、:ref:`criteria_where` を参照してください。同じルールがステートメントの削除にも適用されます。"

#: ../../criteria-api.rst:1194
#: b8401c7d9ef442388c73356f897d0e13
msgid "Delete settings (Entityql, NativeSql)"
msgstr "Delete 設定（Entityql、NativeSql）"

#: ../../criteria-api.rst:1199
#: ../../criteria-api.rst:1287
#: ../../criteria-api.rst:1432
#: 397d9b0d87914eebb6e6421f2f91c88c
#: 5c9f5eb5bdc3457397f492a0b281bbad
#: 772153ea5c4e44c2937360aa0d8973b7
msgid "batchSize"
msgstr ""

#: ../../criteria-api.rst:1201
#: ../../criteria-api.rst:1434
#: 978171a7cbdd445a87400eeff0d5db21
#: 12931898f0e14285ab7e579ad08a3ce5
msgid "ignoreVersion"
msgstr "ignoreVersion"

#: ../../criteria-api.rst:1204
#: ../../criteria-api.rst:1437
#: 87e00c74535f459888a972b05a28e2a6
#: a3d2dda6a826421fb3a0d7a848f18dfa
msgid "suppressOptimisticLockException"
msgstr "suppressOptimisticLockException"

#: ../../criteria-api.rst:1206
#: ../../criteria-api.rst:1293
#: ../../criteria-api.rst:1442
#: ff6cfdf0d9b44e7e80c9c61619d3a89e
#: 167090c9b2e844df8312b9c2ec50b683
#: 9823db3a571b4402b109f37ffb1432b4
msgid "They are all optional."
msgstr "これらはすべてオプションです。"

#: ../../criteria-api.rst:1208
#: ../../criteria-api.rst:1295
#: ../../criteria-api.rst:1444
#: 8840dc84d9c9476090e532ef3cfec476
#: d93744ba0191461491257d7e780c5398
#: f9fb99504ee94a8186c08a0d1d56b1d5
msgid "You can apply them as follows:"
msgstr "それらは次のように適用できます。"

#: ../../criteria-api.rst:1226
#: 262c6f2d692e486a9e8d9cd453739635
msgid "If you want to build a delete statement without a WHERE clause, you have to enable the `allowEmptyWhere` setting."
msgstr "WHERE 句のない削除ステートメントを構築したい場合は、`allowEmptyWhere` 設定を有効にする必要があります。"

#: ../../criteria-api.rst:1230
#: 5720413e11a340d1a7a277bcf9875860
msgid "Delete statement (Entityql)"
msgstr "Delete ステートメント (Entityql)"

#: ../../criteria-api.rst:1246
#: 85c62b22f30d4d4f9dceb6d76e4b8b82
msgid "Batch Delete is also supported:"
msgstr "バッチ削除もサポートされています。"

#: ../../criteria-api.rst:1257
#: ../../criteria-api.rst:1364
#: ../../criteria-api.rst:1395
#: ../../criteria-api.rst:1510
#: ../../criteria-api.rst:1540
#: d433ff8a1cfd41ea853ae7245b006ef2
#: 9c8a1f9b0d304934b939f7ccb6ad913e
#: b9336357fb004998a6a2213086cf5835
#: 869c58341b384eb8af0da5aea8fdc36f
#: 4404cf34a5624828845856c2a0b04f6c
msgid "The execute method may throw following exceptions:"
msgstr "実行メソッドは次の例外をスローする場合があります。"

#: ../../criteria-api.rst:1259
#: ../../criteria-api.rst:1512
#: ba909354bbf34c9a991b374b8ff45660
#: bfa8cdcfe1064e66a658ffe7bc746385
msgid "OptimisticLockException: if the entity has a version property and an update count is 0"
msgstr "OptimisticLockException: エンティティにバージョン プロパティがあり、更新件数が 0 の場合"

#: ../../criteria-api.rst:1262
#: 7b19f811efcc4b1382f4780c545bc2eb
msgid "Delete statement (NativeSql)"
msgstr "Delete ステートメント (NativeSql)"

#: ../../criteria-api.rst:1277
#: 6642a592637541a68b7d3d2225c7cff3
msgid "Insert statement"
msgstr "Insert ステートメント"

#: ../../criteria-api.rst:1280
#: d991ab7bc77244d8bc5589faf7fbcc25
msgid "Insert settings (Entityql, NativeSql)"
msgstr "Insert 設定 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1288
#: ../../criteria-api.rst:1438
#: 9ecd14de23044d67a1e1420af7357167
#: 85fb73bf87684a78a3e194e3b3fc1d6c
msgid "excludeNull"
msgstr ""

#: ../../criteria-api.rst:1289
#: ../../criteria-api.rst:1439
#: 62c0e478ef754cf19bb0899cea3c5d0b
#: 10b50f918d3b442590a51a79d2aa0943
msgid "include"
msgstr ""

#: ../../criteria-api.rst:1290
#: ../../criteria-api.rst:1440
#: 0fdc9c4fa6f145678fd2330bbd46a65d
#: 1129e75ecd5e4aeabfdcab680fc17d1f
msgid "exclude"
msgstr ""

#: ../../criteria-api.rst:1291
#: 56a63abfe96443309e4060bdf0f42332
msgid "ignoreGeneratedKeys"
msgstr ""

#: ../../criteria-api.rst:1331
#: 01ab985a2b2847b393104ef98c5141ba
msgid "Insert statement (Entityql)"
msgstr "Insert ステートメント (Entityql)"

#: ../../criteria-api.rst:1352
#: 4065ce86442344018e8636a4aa72b5c6
msgid "Batch Insert is also supported:"
msgstr "バッチ追加もサポートされています。"

#: ../../criteria-api.rst:1366
#: ../../criteria-api.rst:1397
#: ../../criteria-api.rst:1513
#: ../../criteria-api.rst:1542
#: a7b4a0f1825e4e5691adc6a498173326
#: 05880a9173ae4cfe93e421cd94df8456
#: 020c06d713314cc5aa801ca23944b7e6
#: 8aeef6032d804d6eb0256a19d26747bd
msgid "UniqueConstraintException: if an unique constraint is violated"
msgstr "UniqueConstraintException: 一意制約に違反した場合"

#: ../../criteria-api.rst:1369
#: 45689c0320974b1db5c407b7e862c28b
msgid "Insert statement (NativeSql)"
msgstr "Insert ステートメント (NativeSql)"

#: ../../criteria-api.rst:1399
#: d72c33683ef34fbcb9f50885e11a9243
msgid "We also support the INSERT SELECT syntax as follows:"
msgstr "次のような INSERT SELECT 構文もサポートされています。"

#: ../../criteria-api.rst:1421
#: 43381233029642a2a1a331c2af1598bf
msgid "Update statement"
msgstr "Update ステートメント"

#: ../../criteria-api.rst:1423
#: b231098efd064945a9c7f0126355ee36
msgid "For the specification of the where expression, see :ref:`criteria_where`. The same rule is applied to update statements."
msgstr "where 式の仕様については、:ref:`criteria_where` を参照してください。同じルールが更新ステートメントにも適用されます。"

#: ../../criteria-api.rst:1427
#: 9ed0461171c0496db04504296ddd9857
msgid "Update settings (Entityql, NativeSql)"
msgstr "Update 設定 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1475
#: 28d05cf00dfb446f8426330a083244c3
msgid "If you want to build a update statement without a WHERE clause, you have to enable the `allowEmptyWhere` setting."
msgstr "WHERE 句のない update ステートメントを構築したい場合は、`allowEmptyWhere` 設定を有効にする必要があります。"

#: ../../criteria-api.rst:1479
#: 24a70fbadcfd4f77866fcd474c0c42a7
msgid "Update statement (Entityql)"
msgstr "Update ステートメント (Entityql)"

#: ../../criteria-api.rst:1498
#: 486c17fb393d413ca9fa5d34a3c368ee
msgid "Batch Update is also supported:"
msgstr "バッチ更新もサポートされています。"

#: ../../criteria-api.rst:1516
#: 5388b04831ea45c6b0f009c11664649c
msgid "Update statement (NativeSql)"
msgstr "Update ステートメント (NativeSql)"

#: ../../criteria-api.rst:1545
#: 47d60b830aeb4d42935506a8f6d096a0
msgid "Property expressions (Entityql, NativeSql)"
msgstr "プロパティ式 (Entityql、NativeSql)"

#: ../../criteria-api.rst:1547
#: c33131ce24da42cfb6d03c753e02f6f4
msgid "All expression methods are defined in the ``org.seasar.doma.jdbc.criteria.expression.Expressions`` class."
msgstr "すべての式メソッドは ``org.seasar.doma.jdbc.criteria.expression.Expressions`` クラスで定義されています。"

#: ../../criteria-api.rst:1550
#: fed56efd9029450cbdc25c7ff2ca2fe1
msgid "Use them with static import."
msgstr "静的インポートで使用します。"

#: ../../criteria-api.rst:1553
#: e35fd4016ed14ef788e251e4a259da6c
msgid "Arithmetic expressions"
msgstr "算術式"

#: ../../criteria-api.rst:1555
#: c58f0adb8b5f4315bf11729d0e38c8c0
msgid "We provide the following methods:"
msgstr "次の方法を提供します。"

#: ../../criteria-api.rst:1557
#: c06b21a3c65f4994a1c961cf505e735c
msgid "add - (+)"
msgstr ""

#: ../../criteria-api.rst:1558
#: 7a43ae5312014ee592cca878508a2b9f
msgid "sub - (-)"
msgstr ""

#: ../../criteria-api.rst:1559
#: 715d75ac13bd43b7a70593b96b1c31d3
msgid "mul - (*)"
msgstr ""

#: ../../criteria-api.rst:1560
#: fae789af6fe0422d80ed206267941d3b
msgid "div - (/)"
msgstr ""

#: ../../criteria-api.rst:1561
#: 3b83c46176284b3d9560f0123a4975ff
msgid "mod - (%)"
msgstr ""

#: ../../criteria-api.rst:1563
#: c3a6c08e4a7241d28f35a31068a2934f
msgid "You can use the ``add`` method as follows:"
msgstr "次のように ``add`` メソッドを使用できます。"

#: ../../criteria-api.rst:1585
#: a05052ac05cb40e087aa661213530ce0
msgid "String functions"
msgstr "文字列関数"

#: ../../criteria-api.rst:1587
#: ../../criteria-api.rst:1620
#: aeb0b8f606754b47b2eef961bfe329f1
#: cd5ebfe11ae74b399ce30016cece4081
msgid "We provide the following method:"
msgstr "以下の方法を提供します。"

#: ../../criteria-api.rst:1589
#: 61bcc396c9a64832956719321317880b
msgid "concat"
msgstr ""

#: ../../criteria-api.rst:1590
#: 20996b606ef549b58c03ea79455af7cb
msgid "lower"
msgstr ""

#: ../../criteria-api.rst:1591
#: 537c6b66051d4e87b249414c6fede0b0
msgid "upper"
msgstr ""

#: ../../criteria-api.rst:1592
#: d9d39c23fce945b184e0815431e7f57a
msgid "trim"
msgstr ""

#: ../../criteria-api.rst:1593
#: de94879c16c04025bd3cb11e19e05aed
msgid "ltrim"
msgstr ""

#: ../../criteria-api.rst:1594
#: e2aff371c9754ce28be3847909c60575
msgid "rtrim"
msgstr ""

#: ../../criteria-api.rst:1596
#: 199225a7475b469c8bb4f11a66d447d6
msgid "You can use the ``concat`` method as follows:"
msgstr "次のように ``concat`` メソッドを使用できます。"

#: ../../criteria-api.rst:1618
#: ae61144201b74954a4cea35b68540c76
msgid "Literal expression"
msgstr "リテラル表現"

#: ../../criteria-api.rst:1622
#: c11f1eab9c224e0bb5e6c9c0b912adc4
msgid "literal (for all basic data types)"
msgstr ""

#: ../../criteria-api.rst:1624
#: de114392fedd4deb8bc30db2525dccc9
msgid "You can use the ``literal`` method as follows:"
msgstr "次のように ``literal`` メソッドを使用できます。"

#: ../../criteria-api.rst:1641
#: 8d5b4268dde54cfeb8370de0fea78e94
msgid "Note that the literal expressions are not recognized as bind variables."
msgstr "リテラル式はバインド変数として認識されないことに注意してください。"

#: ../../criteria-api.rst:1644
#: e3f8e5d536ed4081ac5dfcc4f47ca6cc
msgid "Case expression"
msgstr "Case 式"

#: ../../criteria-api.rst:1646
#: ../../criteria-api.rst:1681
#: 5013338116ef4d52b76c26396b3f8a76
#: 5e6192481f4c4cacb1058783127a0821
msgid "We support the following method:"
msgstr "次の方法をサポートしています。"

#: ../../criteria-api.rst:1648
#: c2c74a2f090d4659b6eb9d86800fadac
msgid "when"
msgstr ""

#: ../../criteria-api.rst:1650
#: fe14ed4145fb43a5956043441918aa79
msgid "You can use the ``when`` method as follows:"
msgstr "次のように ``when`` メソッドを使用できます。"

#: ../../criteria-api.rst:1679
#: 664917591e024faa92d80a437afb8cb7
msgid "Subquery select expression"
msgstr "サブクエリ select 式"

#: ../../criteria-api.rst:1683
#: 11824e467dc44a93a489d9d78e5f87b5
msgid "select"
msgstr ""

#: ../../criteria-api.rst:1685
#: e268b6ee3d4e4ed08d15e72202a7ea5e
msgid "You can use the ``select`` method as follows:"
msgstr "次のように ``select`` メソッドを使用できます。"

#: ../../criteria-api.rst:1725
#: a383ac4efae9491bbd1f97de44ecef79
msgid "Scopes (Entityql, NativeSql)"
msgstr "スコープ (Entityql、NativeSQL)"

#: ../../criteria-api.rst:1727
#: f28e20a849cc4014aca7b50d048f4402
msgid "Scoping allow you to specify commonly-used query conditions."
msgstr "スコープを使用すると、一般的に使用されるクエリ条件を指定できます。"

#: ../../criteria-api.rst:1729
#: 562d41e339f34b5692aa7e57da038897
msgid "To define a simple scope, create the class which has a method annotated with ``@Scope``:"
msgstr "単純なスコープを定義するには、 ``@Scope`` アノテーションが付けられたメソッドを持つクラスを作成します。"

#: ../../criteria-api.rst:1741
#: bfb7949954604a73a8e03582a7aafd56
msgid "To enable the scope, specify the above class in the scopes element of ``@Metamodel``:"
msgstr "スコープを有効にするには、 ``@Metamodel`` のscopes 要素に上記のクラスを指定します。"

#: ../../criteria-api.rst:1749
#: 6c6be65dc355436f9939d0aa807b9d42
msgid "Now the metamodel ``Department_`` has a ``onlyTokyo`` method. You can use it as follows:"
msgstr "上述の設定によりメタモデル ``Department_`` には ``onlyTokyo`` メソッドが生成されます。次のように使用できます。"

#: ../../criteria-api.rst:1765
#: ec039c32323d42efb0bfc473e2483297
msgid "When you want to combine other query conditions with scopes, compose them using the `andThen` method:"
msgstr "他のクエリ条件をスコープと組み合わせたい場合は、 `andThen` メソッドを使用して条件を作成します。"

#: ../../criteria-api.rst:1774
#: e013dcbbbff3432aa9d7f0cc27dbbe78
msgid "You can define several scopes in a class as follows:"
msgstr "次のように、クラス内に複数のスコープを定義できます。"

#: ../../criteria-api.rst:1796
#: 075cb63cdf9448cf87e546cceb827841
msgid "Tips"
msgstr "ちょっとした便利機能"

#: ../../criteria-api.rst:1799
#: 97f6f1c877484fcca62e44ae8b30ca58
msgid "Execution in Dao (Entityql, NativeSql)"
msgstr "DAOでの実行（Entityql、NativeSql）"

#: ../../criteria-api.rst:1801
#: 61eda5066ed4413e8234af2d624d0862
msgid "It is useful to execute DSLs in the default method of the Dao interface. To get a ``config`` object, call ``Config.get(this)`` in the default method as follows:"
msgstr "DAO インターフェースのデフォルトのメソッドで DSL を実行すると便利です。 ``config`` オブジェクトを取得するには、次のようにデフォルトのメソッドで ``Config.get(this)`` を呼び出します。"

#: ../../criteria-api.rst:1818
#: d08e48266286428abd1a463b41d04024
msgid "Overwriting the table name (Entityql, NativeSql)"
msgstr "テーブル名の上書き（Entityql、NativeSql）"

#: ../../criteria-api.rst:1820
#: 41e89011648247ff997735c6c79011b7
msgid "A metamodel constructor accepts the qualified table name and the metamodel overwrites its table name."
msgstr "メタモデル コンストラクターは修飾されたテーブル名を受け入れ、メタモデルはそのテーブル名を上書きします。"

#: ../../criteria-api.rst:1823
#: a6d803c959d64fdd91bb01a02a61a950
msgid "It is useful to handle two tables that have the same data structure:"
msgstr "同じデータ構造を持つ 2 つのテーブルを処理すると便利です。"

#: ../../criteria-api.rst:1843
#: ed8bcb2eb8bc4564b7ffa4f76c83526b
msgid "Debugging (Entityql, NativeSql)"
msgstr "デバッグ (Entityql、NativeSql)"

#: ../../criteria-api.rst:1845
#: 23f6cd6908a149aa94ec729113b1fc8a
msgid "To know the SQL statement built by the DSLs, use the ``asSql`` method:"
msgstr "DSL によって構築された SQL ステートメントを知るには、 ``asSql`` メソッドを使用します。"

#: ../../criteria-api.rst:1857
#: ../../criteria-api.rst:1884
#: 355bc3e513a2412987eb2dc98f9f76fe
#: 07e16353ae194dd78a920fce9eb12ec4
msgid "The above code prints as follows:"
msgstr "上記のコードは次のように出力されます。"

#: ../../criteria-api.rst:1864
#: 0709d5dbc39b4b2db3dca0626c9f2cb5
msgid "The ``asSql`` method doesn't issue the SQL statement to your Database. It only builds the SQL statement and return it as an ``Sql`` object."
msgstr "``asSql`` メソッドはデータベースに SQL ステートメントを発行しません。 SQL ステートメントを構築し、それを ``Sql`` オブジェクトとして返すだけです。"

#: ../../criteria-api.rst:1867
#: 85abf89d020b4d01852a6026f8349302
msgid "You can also get the ``Sql`` object by calling the ``peek`` method."
msgstr "``peek`` メソッドを呼び出して ``Sql`` オブジェクトを取得することもできます。"

#: ../../criteria-api.rst:1894
#: 5d11ab37709144fb9099f22e4554bce5
msgid "Sample projects"
msgstr "サンプルプロジェクト"

#: ../../criteria-api.rst:1896
#: 0dcba2d8440747aaaee2f69caab05704
msgid "`simple-examples <https://github.com/domaframework/simple-examples>`_"
msgstr ""

#: ../../criteria-api.rst:1897
#: dfa5c895261c4e869974b3e767203c18
msgid "`kotlin-sample <https://github.com/domaframework/kotlin-sample>`_"
msgstr ""

